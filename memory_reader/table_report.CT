<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <Forms>
    <UDF1 Class="TCEForm" Encoding="Ascii85">9m,up!Y}j3z__xT+l+-4]i5xmP)d)}b2ZT^wAs:w6#7D,rSv#33jp_:J7^muj;cX-PVOk1@k$)p*g_F4v-pDWG.E)LVC4L#w)Y:3rCPhP*X@x7F_cz}c*wcfR}IsJssolt@PO8xx{K+i7VL3J5#R;</UDF1>
  </Forms>
  <Files>
    <Starter.lua Encoding="Ascii85">#aL{],cpsH:K%S;kA%:d5}=tc3oL-!v]Foy3y]csl6?GO7GNaW.v$g-NyW^E^f,)J-BE9r9H-5.#zx]P6z{fg-E%M0-#/Kgva;[Zc+dFG2_2e,TdrwVFjB}bYhqJQPLD50CSooP-].{lV;Q3kVwPGG#330DhC=z+nKEOQWdelUrqtTG8SU/;ImoF)$DArX,pYAN-CWq6;Ia;tbCmh,pY5$o#VjKqu6]#6/j:nz$;[9?u?y=9U8;_e$+wXUoH8Mgl,Gh@m=WATb0Ullx3;s/N_;pT7I0e4q^+0VMX0(?0B-$7s}F?c=yCgFlt@XCjN3{-Ih+ppe;yL;]XL5X60Wt/K?KZy#wUVhY8IfDhz#Lh7!od%Wh7SQ9FQnOV[3KjDr/Ni6b/_fpozs{k)3$oEFo%,CpOd%M@iw_Y:D}q+9GqS.GT_EA#JdH]mj;Gv[;[+Dnyn^xQVqW/yf5ZpyR4sM/h2hz[:[5:1zI8@z9jsl{[H=9#4Y)^rxZ@-XTQf27FqfHr!evXNG#E*=Cx1H3)_GSFeaiDcI.99Tq6^E}VFjQ;ps}IC{(5RI-(6Wr(Tt$QQh.Hip%{C(4p1oSLw8ZW_f0/D%7pBg_o}vS*,Igm_(a:NY#:p(n71c!it[DNKqB-P6_6OTK}AlXGs1Il8AdL?7Y,[?)R62!F;a18WDwfBl.HD6yhDa*!Cfmt;6Fx3=TKH/7jzVO-v;X6u95%Cd,EIaS_I+JCLxq@bC09bsA4CoFgsBLZf,F}pTBG%wwv2AenhFu5tS)gdCLb0A?C3ji5;4}kD(W.z?%vlxrmzoY8cG6fvP%(m.8.t2+Wu)/7#y%uHds?Cnyd9@G6tK^xFKf;QNxv[4HQyyQtPI^%jP[JZlQqpO_wAK*(JO_g{Ng:)l:U0b/9*6KBd2L2bF9#PEIR!dH.gmBW%a)p4[]/5Wh[R2qu=Ig6hWmp-m,#-m@iC7QzJtxGOuuoa46hNsBpOPNmLz6Jn*9_?HKH_Z9.^*Rg;C$i:^D@r9}4$-)z7)XC8Z-#cS0{a,H]%;VJScWE8R8;mLu^aB7:zRb@Q@z=XX_{#!dL{leJE1))dtC2W(E[TAahA;DY%fAT/?uqfUQK0wAD=R]WzHBn)42#IRH1FsHGKcnxaeV2^W%/241P6kIL/-QJr-#8?l@E9VbTCL,EM=XXl+qgiS$5d2[gkGuj!Rm]jKg3:M#kJG@a9MI=C$Pc6C#Stz)@^ZLVef5%m6.K9W5z%VVW8RA*0Dxr(Z}[3]:,=#4%OC-nF0bKEaZr)WNxFP.;duUe[Wf;aY24LBr[qL808xHir_%Q=h0Y03T=rIKZdg^hIS3Y8$2?-F#Yq?P]9QK{SOY;40oWk+.W0ifCuE%I[DE9o?zzgH0qn0f2O=}DAZ@?pm/yRPKQkQQArxq;6Sh*G6TD6OWOWefG!Yz@I/E6BU?wy}PbvYg+FY3/Az,H0,;BMikvH[%?+IX]bSye#a4)6gHgM+Ek:j}*xv7hJohA1a?[ya!o4XSuT+]IrgG!+8OiD/{3MN]kB@!/4,L19X$:W:x:-n1N6F*R2FqOkJW:X./,ck}h_1mUmRsuFiLnpLzS2h}kJ6%5=VS[W@ZV3qfNUQvPrmk4l$hayT[R^gb[@(ztW?,%XYyN,}M@tgGh3{zDmFZ.AjV1*LzF!C!o4!D7hj#=EKe;JspZZ(b]H3?pRd#=A7Tkc#-S4$3:G7Ch:@ibub)n!iY1Fv0*Tqn9(!POUrG)qE$xx5,KH%bwT[%[[n_6y9uDHgH_Eb0k?A5ME]1$hk6U-:Hh#vBt9@w?F8?%VAD3$}ne4Q;(gjJN/by_+lBe.Jifq%wlzz)kcwWX[)Yi96XQS#Anc}@vMBEE^XP^.hc3f0EElR;XZ-?,VaxDE/ky}e0-!BB}]#pOE2pYh@YMt6C2u};NJOAVODL[(T(JE6VS9oXABcdshku_244kg8s90#13Bz5BxB!g4eluH.6}#i.Mj!jI%!)Y84,15]=BxLovwneeM)R.Cg7!j=N84]GYtQ4IbA</Starter.lua>
    <Register.lua Encoding="Ascii85">-5OnQ,c/Kc3-tXS3H1ueTUSloF1D9$cHt(1E^8TP;fC-HF$zYaZC*kPpy)vNqW{G7NLnIg+-7^IlDi9bD?z.;:bJM[^%P;dH.+5a53FFcVmbVn?:7z677I!iB4;*_86$6xPDsHsCMtIS9;5;S]BL%eOp[$+k-@SjKn]bAR%URf@{O19?/h%7UM@I_QmLj--2CcE$?OFRlFnyyobw/5yMM2c87.]W@M8/i@7,dxEjn3/Omiu4-LzVk:dwubL)r1-3C)lGs.YPY9*Z7wP*[]#HfZk!++I3C:?YFM%pp?uFO)n,+![D//hR5)Sb-F.1U*YpS.=TfRYezEFwk]T2cwVg-(=Iv;z2aff?+ex=2ee$TuiHkF7!,*r.LeI/P%$hg3b%V1)^Q;Y7ml33x$6cH=NKtC6KR_bC$rw9?z)8#G+WBDsBVAfBS9+6+)DNV_W9]l1]a@%Sx%1A6O/.^(IPAXwd.Z9@5H;8?JI4sZoN[E2X5]3(7)jO/[u!M*4TofIo.8QG/a]%xAy=)ZgDQA+TtV1WR7MqK/lGDzzk.6d/,+BgRHULMlxSB^.2I6q,9[DlN-VMnwYh;:}^TTBIl}6x4,tF0;q06*Qm[D.,cl%W4YfELxl!4KFA!P/s(yCi:Ue@?nEeifWh+jPDVU0j!y]DpP!phS26L5QkmONCReNvVeswOU$?QeqcTY=C/TZ#Im/%znWq5Pb.;pye(!7*GgdWi=bJFb^GZ$[*BA.96s(#$pbf?%dM7u%EvvAp4$s6hrGJOxKc_!Xa9G8-{2fmjtP*Rz%[o=Y3^jIUzff6Mu-9f3v]=,bXfQVM*zWUn{p%h-IX:_F6VJJ/$2H7y2@HQxFct2Ma#Q)nUdL^U1;FZ[p+.MQE7Pae{*07tU$b)Vj#?7Zb}pdDeCdpxbdJVLs*h(uu26{K2E@Zw3%E(W;m;nSD;MvX_aHW:_aC.YBp4gf@Q05AT5=A[hJdd2YF-(;_5l}x4)Y-OVlTmsyvo?Sn#P{xtoQ[7mU!NYCT$nT}e-3cu@cm!I111cKa-Vi.rAz(1nG)CX+s$Is;K}K:AMbc,m_Q[,$b:KagGLcx8pVlU8z;.2MSh:CZ?uW9%9qSOpg25?g?jclx.gW3r2.ZlO+eIOs:YcZ^SJ7/F85Nx0^YH:x6!s:c#iH)9ga!$j-!jm9ddT]}/)aI-/xd_hvWE)W=8LH4rBgka.Z$$)6N046U9,9,I]b!/ao7lmjEdIde!j75!tS3;tjdm*vuOm71Pu1o,boC/3k/Dh16aGTUY/v9uwOGPOX%fhj#Lq.gh.i=!JX+sW7fWMJe5E28$fCw.24;3Lj?Q1(._Eu0v9qwHL1;fQTiAlgrMyK_]VoR#Onkx8S(j/?B;TPL;U8;i.jkI%9+p^k+TVB/PCT=dCE.?D.nADLN+c{iDVJivt.l{Akbi)Sr?CG_L,N@.ejLlY#Kc6*{zguAm$u/$}#r0V]%o,l=S;Wjy){P]]sfWt8@!DB2t0x2%OM=9^7;CKU!F=Tvjm[h35vZkJap0a$TNHfPTF_6Lh-s5R+3%:iie/Q-:yd@VDq!$tnTuzW9s#$UQP@VTiA(:A9J9LX=81]flk[uH,?y6E=uSXu!ayGkfkx5]%n,:*,EH]@=0#!tFx}*8i$Y!:3Cvt7oEFmMyd;r#i,kHJ9I_UL/ji2]ic#xAs+:*s@Cjemr8St27:/Z2kYs9=HF%Q(BXJtvVjBv(pw@0YWmA7M0ZRbzDj.n8RHxihwRZ3h[5sNBGkCk3)c2p2N_l.}KaAw/-M*b]eFj@j:eEo68a$Zg,Zzlp-*{Gk42HN-LWb8ZZeW?vUm0p?)M209sw*(,Yf_g;*JHRWy!+dtR-NJS-=uBXvveDlB[l8^SHu1h+7bYL./k1mTlbBavA}o6hE5QzDkuX[q*$@*c]to)POG+H;_o^6z[[g6mROA?e2}*z^?beV]rH8HA11J+^kIQlqq*s:6Ql)ubMh[Oxf)q0ljpsDh}xciS#e._/(^2.Bca*psTGo*tDR;at}R2dxzY/-jG),}6SI!!]Spkbf.J+L+n$X2c^lk$FAu4v+HE.)vjx$6$pK!SNFUcGM9+%7h?o8;JKl*s]ArbL.ey$g.buhJWOQuif_NXhRwh)J2C^}2uyX?!K2[VX4YpuAm^A2mk0}e!dA8j(2Z7idJYTv*n)tiQTOE^I(c{}L(aPf7S*#iorOX!v!:LX_U0OPHUP0,@XNYb,l67I}NXA?m6#D[TCz:_shi%YbG^_8(vb)th]c/U3s?so6O}*vxy1a)ab=7oVnP7#B6CVZobf0#vo+wkf@H}QOLs#Y?mPhNx/-Vg([nb;wBtZz}C7rUDHnYZ6J3wrd-rusqpw(LOesl0xxb4lfltSM6[8B%!fP#,]F7mfb(t)2]IRbG{5FJbK)0Vkd8Hgw:K#sPXQyMt=yIR3InFB^BGb%n,d-WxR38Sh2V@i!x77JV!bXY#Q.OtV%InVG0!cX*4!S1uaJb)6JZl4w#EXkB@$S]SEO@M4iSHzgtnw}z1js#SP,[X^[B?=:e!d[60ajWM30MT{G,z}v=ECcWnL#mZrmGFFHtmrsrG7,N:Ai?QZhM}1nQ))?XH]UA_8Fm7.qZ]FJoOZ}ZIYr@wFreBism@9eqro6t1sIx0y*k}l?[+ynwUoZzZhQvov4,QP@ZY8?R@7M*78xPZYYE/D0,#C_F[DQi30ck_;vuXqduVzcb$!?K7#tyIA6+N*dB/e![K(IxN%Mml%RZgUs{Y],-,4a=q]Rt_4M9n%yptBFom{=@iqE+$-7s;x7ny4X1pOa0FVpNnlMuY^r^v6@Qa60e6zuK/Q^1X6iuz[jJe6eGrWQT}$-H2Hg-r}$u9/m(!NLD^wiI(dRfx!I@h4#2Hh,waYloF,w.1rK]2qf07cIC{mw=yLodCCA8f[vS!iA$gh!X2MwLKVfWN2px-erjFJpZ!5H:xBn,w@#f!mnEhG[r8D8f,c]d2[0m$v/rSIDK#4eH^fk*r:P:=l_ZTVD:E@bpO/LE]UiqT+SGFe@)%SSVh1SK6;N+anMC_rwG3GlNiTibIjFS9m]ny]/Ala,6kEo4^/^1AiqSnaEv^+UG@mEllWm3NA,TM(:[eP2O3BseEEzAO+rLY@]*7GmRTPS.4(NfUXUPqri86EpFma++*-S#ZIWX1,UvZm?%^JT[d0fS4^d!p!bq)d0K*?azc5;/,5Mf%m1?lpVYHjK@/bQolnbCzv8-:mwf%ilo{1ZTaPhf.$g/.tD8mENqy,guHh#z^wwdB%3043Ev77*,usK^Z+r82BEsgtR0RQ#Y=8%*je+SZ?pkK{eCLT,n;6O9M4pnF3Oq^,t9:=3?YK+?/.eI_7?in@WyqnW/:0HbYdS%H;I10hTYI}V5XzrP%?tOF7beY*SeC@k=dCafWlln*aX(M3h+-S{ct]_6kC%xv/Z_CWNJ*UZgwPPXYv60r^)a4A@3U_ASG)B-Dssf^W@qX8jq]Y7v*{)?GPL@[@2xK{MluE?E*VX9jB[kLl$MW+0RjTYV?X!].fj*WK$Dq7xn!ly]jn%h5YD==vqdFeY/pA)CxI8!?uDhG(?{S[@r^q;@unqkMm(vy4L[DoGt%t5k9JSm*SmW]#hu*xRbq9mH/3QqW%qwHum#B4oj}8V2H(xM)Rs)6,zYE)g=g}Z-iG8^_)=dbeSuqs3yIuy^5G3Jv_Df+(kj+vcCI7?zfC1_lQ!ecFcaDNL*u!gUVEb/tbPpB[Zp/CXvZO0F-X5.jZ/aJ37ykl2J_)u;M(yL{96-SzVZniyn6NTiIsY4EI(uf*WH:/5B[?r-1JedqK$5uug?m+;nb:4)fkdF03301.rq)WYtii.0X95st?G[u)-odLwcD_Sz(zeI-+B0XTC}RoCl=DF:</Register.lua>
    <Recorder.lua Encoding="Ascii85">*mi@/,qM$l(jI;B5Lp9BjqN(F+X@ZCi]40t0PC^VS;J#l8x*DQxk.ixQc3*Z^ul2L-W@HFq%6Bx?#@#$fg+][$K(yH-;CmS]0A@EpS-0RjU]RtCgCEbVvtoasS3CwYDUSMlQWXBgcg$C,XDI#FXw[yXNrVLMD}aK]^Z}QbEyYsN_o}9.X[@mJ,DMU2V6]aT7LO3XR2:;2IZ[op3nZfx0UfE(dBNIpX89d_FEG,!5S}CB2kPN5*2tDBB-iFL0.1vB9(mpRBlL;iPZy5FsN9ezW,moQpG_YrKzA(M*$S_^EVGqcn5{;)t30pPiPmpU5{:Zi/E?H(Tm0/FySJPRVZkjKA$TpLnMeI!UYMQJqzw[)IUOK*uGki._-{b(f[dQDHNSjack_q,24=M_5UNZk2a+)FV[$sZlxB=Hde7;iJiimuSd$PlBbi2q^]0CCZymHP:E=pPvqlA(zTA%t.ageBaBc+tvc#Mv@t-#d[$hZB=0pGHuQ*R6@,O*8Qu(ZxeOeZ0St;38QVF{yC[uK3.uhi4jWsel(Hh%hGN%?w^5:p)2..$6nzcG0lSp3poQv?l+(Y}5^Y],,-.lY^s#QWBy6pf@?iqL%uVJAEmtlEaS8b(J;xG5CFXXf#i%nQNOqsVK-/4U:9.jArrQm,tX2jrDBeCF*,0}wEt6KmSAtiiStXF+(M#19k:mBX*-nM;!ZR*w6Y9NAveS%RQ4Njkm5ApJH7]xtI3(S((R=@Xj%F,a(f,5QAe4)c27{h=^^^/Pd.g][6RhGJGr@}y.,*#mLQEhG@d3S0*g%C[s!+g*[DISN(BD=JFk*ablv=sRyKwEb-}dpEhW@l+*r,kyISXv-n;#WYy-@{g*F[LkM3uvw:7J^HUQmF(Fa%@Gc/zBC^Fy]Mq?w;6aq?Hjsh/UYGR8CFT$;$0R8D4L)0;^Z]q56glkV:6[X9tL8g]Joo[^wAqHd{=Gic5W^;M]CPHOx5Mq),N2syyTQoRXb5CCpl/h5%dr5./%?RHFit+6nvER8m}dccU$YZ1%/:cG1?,-QT,Y)+0fFR6GJ3l=8yv/VBje!VE1%rj(lV@Ys,Tg4EQXY($*9YPtiM{DYz)F6*cYzfkO3v?vK!Y_dVs5O(*:1@}y#IRL6*$c!]Q$20Gsvd77T+bl}0M}{MXZ*Rc+IsngkubtwcW1colxLQQyQM5{$Qi#rl4CZ7#A9oL=lQRpdW%%b@OzN#VW}6pdDgO/WEj?$k=}/OmEQZ7JDZW75oFBT.qObKL0x8bXfO@;iz=T=4#9,[wwm@^,Fp-+jeIFz4{YM6^1e?2-Vp%btM-/*+3)YWJ/Qwvu1w9OO-2nDChE;:*bth(jp.B)dWxrH7%fX4YmdQ{#$nS:4XOT09aV{SNePzDnvml5V,,-ARaTlU3;NahF[qx,F#0m8f?^GPt(?sLu1ztj?#8y+q3HG!o0=bDj8+]mb^*67ONScdOUUn[L]U#mpEHEf1qKxD0)WX-YlmOU6g.(tvT5IYM9%X_o{G%LWuwb@k/0]y+nenPOAMEQt5}kx!9.;Hd/sGG8wf?)A?qjP5:Wz5WmM7/94cqO,}$7!ekphYI(NE3+E/fvt{xb4.!HZ7TuYQstpykxIFKn:[N0b{*}d@2;faK6Z)-8L-_7c53oo=YdiGJf?l{k0+[fzDz8@Nu8r?}v*Am*S4^5qiu?r_y0$IV54w6b;5b8R}$;p?Of+%Y5y;%Ifh=*,9#,A+io,pPxsD1Q#myWzziN={vXuz=l5FFK%GM;[77H51Kf:WHI4{Vc}x54pUoK+_2l?!nVJ;waigqSEoJB$e/s3aADoj5RyHA7HVfjC@W.@tgC@hDOl#O^TmMrqHU1-^qWAwB)FMmJWJmHMTkVh,(.z}yEUzo{@exnK#GG1nsjNI8I7sj)1Bx/eRXiFzz{neywx?0tw(P/cea[LyeWuwemD4#+CKN}iv9t/*2Ol@!e=/luCTB.5%h511ura$l[tj#=;DIZ}m+u#c=?G:^$EL2@[0W8HrcL[PQA0lw6(]9_AGTh2pam3u4xGJ48UB_$NrLzCEI@O}h/*+}}DAN9Nq#BFY{ut}g4;5;mdMgSI/R,cmPZxo78hekezhi]^NhvK!KPg9twk;neXq}wy;cCX{h?+h#mWF8cdxaqLgtoxN/X@6z$DyKqsL52^w;K(ukE+TOG?a0(_Gsv6z]6z=[4r7(kOG[;wMaS7FW1yVFgcJVA3Mwtr,u9B4XDCHZi*=PY#GZ5Y7Kp@F76[4K#Iq]wAyW0}z3?9nO?RG4(Z?{@i8V@Sp?v^!dD{Z$pKEENHF[LFYB:NC%0=H:6(-yZzV2#-6wOftwxsY6YTPc0dKD+d?2x?S8hF[N@RSV4zUPQSP4G*FWa6*zDWTfdyyNO{A-G{x@P.o2S,W5)#/he^nj6=oXx5j^aP9DlLtIFjmH@CfknwBCF%Wk[eyGKHb(CJBVU2zebmNkaOPWAMGMdGBgg{K19SseKAxsw{[}m@2[w63pzK?p;FA-jL?G]+5IbJUC?(GTpc/JNi,4hHJ3?p#E42T2/fqaS7Lk8-O^saFGreL!WR2mGB6{7AHBgZyw^syi!fF9FWB)vxIMu!9Av;vJri;%3-F!Ca0$[+h6MH4sT=2MP}K@qeRo8PvFpaXo#lS,n55;E?TOfl8nN:HZKI7@ZNQy4w?n6EmGm?*1u,$?whL-SjhM!v5x-)yGZ6A@FY+Z8]);rRpapTMQNuIIV3bwGWD.e;_^r_RtSw0!Mto,=oFWE2_BRuk9hg/T({x%!LFO*1odlb3d#j2##z8LUoU-FZ$cep.B,b7Jh.KxORK;Q2X%L1^MWIKu4[uM:Mi)ID-^ZPkqYftegSu6kR{hZhcWoFT$%B6}6%XXjen1wb}RfCyzQus29K/l5w})1#iX)}L[Rww:A5BK6N(Gl+:ha[AN:56QpC1G2w^odhSS,Di6r+5G)iE3cdRal[v2r%!Gboo-zo*y4OjK5Fgg2h54=]wvT5%(FdwLBOapnc.zzKHS_k2Uzc0T*H0xpIQ;/SPO/ftcc-wptjo6,^U77X^*@LBhAhK-0e]}*av=^$_{Ra,jbtWEc,DHlRz7L752XSbl85kfUWHzO*2,Lgnb5)uk3YS^MHEpjey%g1{FztOfpzReK?!nz:[]QG_n*@.*}^;(np(mN4(h-hNcq+1/Ts4=/TuiJ1eNRkqQ3;</Recorder.lua>
    <GM.lua Encoding="Ascii85">=OOj(,eQ?cuc@fUaAK,wFNtvip%I8qU_PmhC:#ffgwW*}m+CFvS@h$Urv5SePxtPdeYVd_T5U-uEfU1o?B4e7ckj.pWxRON_Mx#TFZ,FT.Vf[qA#{v9uADz]gzoSn@qmAVf^!=gJrV%Hz[i$%b9lsAK1;rb0fvFqLqlsgV2?AJ/dH:5v2+)wyI%Zw/./U+h)6qmPw(b6h,X]OU35+JkhRb4LpLN(.NIj{V.g!+k{y8n,nZr0?@KtT[:*(w0=wOLve/j[?aKet-qZ^q!:J+F.b1(@efUGjzjt0T8F!B/]X%,z?HNx8kL)CLROQ8$;8B3WeE#T:+e1U3xp-4S?yXQj)TB,:bb_i.vbjv$dh?[Z)g=;J)g]k[pp=3aK*,3bnHMb{^(T4ABlI*zi4EqUC)9h6(hqfU+m;EqZ;NzLChxsCLG+Kib]Qqm^r(T$[+j/pZkc?!4t9IM1+-5gIgKLcIpea(XVys49Udw=W5#pglZoShbRy50K#2*WXV!TxJG-)aC.k1F@WP=s7tG[5rHW2Yt-H$qF5cbUdAY%Y5TQoz)qKxFwW,$834Ig.W^i[GytuM]CyqN[=BYo{H,V*)FFvP#LS*4Q3Tzr]]cPWWK[u[.LO_j!lOpmYZdC-B:iZbj5TTMVNpTaA?WX5-C:w?^/K!_vJUH]]j*9!OMb;g*A!xML)i#i3lKDDapj;;PQcyJLr0_CzrmvB68#,[*qtOV=4c]Y/Cuo,;oETF[PEeB;+78uu8Cg_1+8tu.7$C;0mopYY8QE(!d5#KkSMwzvt8uG$+e+p}Fss2?D]h3y*Qs2j%V@sbelR^]7tt.nc.iGkNLG2LNvBkxWI=2%LUS3!tdG+H+Xod_-Y+#[nOPd?m_qL#1HJOq5v/Pu@kuc3gN{xJ9SJ+zcF[qCl9$m+t*k1o#mjHa1n]5OSE-,?/EUN3f9kqwCX21B2$f2kl2nDFU):a[8WsneL:oownYF9I]0$iLyeqGHgUYV0k])wZVYkm6FH]0D6]l[uJ2-GRw+mqR0UDyS#oJv7Lu!jOrDO2*?;y{h0Su^xGJ+LmzIA4{*1EK/-/5HxO[xn=h60jsj@q(sD1!Ah.u=H1?9dVC81..#fxBxU7W*=08KeuFxNIzfsoA^?5/JIIhY9YY)gJ6oK7tKLOBhNSZiojgoIyA/gJSV$qI/b=mjIhkIi:od+g;C%engtZka^d#:G;}!%pF-?T+XqOf-]n=E54B%7eK:mjJ$,9s+I(ZhG?{754L2MQMP2Ju_y_DS,-SgJIo%6XC{y}cf366,+8g6,Cs#-!2IuJ#SeFwNYP,2Sy:[i!RwBW%@X5dJX:97Z:st9u1KMb7yy%7LQ@g*z7}pEM7fkOsj2zuIHE_UTos]WIHL4j%;W[l5}Nn}qtv;n5n9Mx75h}QgyXtg^2gJ^)Q$ac;M^5j#l:{$jDq2d8X:uOf*0G5;saoEK:TQ78KX8pWb*}n!=}C[#w(s;X[$/PUm[lYs2G!KR}KbUn_iCUqu/l,tn6hU+6ZmNwrW=.qY157!lt(h:Tofc;?vCv@BXi83]C3zGU4]mHLhJ2q#Si(AhiW8+M.KPUv1mPJQJB]7TWqO6Q1QDPqDruN{Iofjwm.},aF}/dQp-)zA$KY=b8{oj#S!{323.QsXwsVc]sO{]$EOl!:O0P3c/{Yjx?CVc(IJ+uN^9%lfE*kWDT5lKJIXxykUbt)I#tW9=_zkR#A11q4KWf-lN?{Jud;Nm7zzL;^ihu(W-4/*d^9{yZFhv6+UJcuOru*GKLDobV#79s7kG?/n=V^,3FkmRcuOpA1HI9XpG]-H;)kxEftxo!cl]py?O^tPMa,dPs[uK)EDI!Ws:o:Ga22l3);Lx4Acg(QUZt3YA?w3p{tAARs:tvWHt:F^2,d-+ejHJX48754(/du7p2CDp$}dK,q11#ST%]UT]Yr#Vr9s*G),vbC9_4g+xW$*F]F[f*{xXhg(AugEUyN?%MWXiy/wKhu(u!$PMnLV*GW)nHj6QR%{_.)m2/zY[B/}a.j!}YZ4]y^uI?xq8DpOy!hA8VF0f2@abPJO/UI*3ODWA:D,_%Rpr??z+jerodhnFqtSPf!zVm8xqPSf}lv+@{^ZUCe=2(4#eY-]jtTT1NZcc?_Zu{1zh.8;j4wsGX1$jLpcBt{wjI!0WQH6c;5,G)NF];K]PSR/:]mNoo551V?grKnSmUe_8/wQ-E9G=(Q;)Le5rGZirv9/xqw3gK?v?OoRl3VR?oIPeoES:qZ[]Hg^ui@+wXV+9qqG-5#GFCm,=Vfa=m*oN3Axga%@wn$?8Yll@(i_2oe?)9SzO=V#rb%rw(2_=qg:F{P9l(iAx@Dy8O!m(bm}Dr+3SJU$Ys(wZq5YqYW8GV/W6dGxanl*+uAoRDqQM4/G;GsVu!p1D:f#Bhn*hJGNKd33k,$namFA0jai!C$(6P/ZI]j/1G*,T26[*:vL-!gX7?2U2%}[b,vJr*U0^</GM.lua>
    <table_report.CT Encoding="Ascii85">=7io/,DN)pdhg#@Yu+7291^d6OF%OOfyg/-0hT{l1WG6n7cX$1]bw_@Yy.lz[Vj7?%)lG@rK,#$%b]lr_M$QD?Bi}#Y$pn}4X0_nEJeRS0q}2BlcqAuOY]U#L!bG^FR[39@B:!a3y#s7%tYX9:Z_S:(P(_6q5V1/#lDzbZMNTNUf^IzNApWVXH:b21A?WW)r:(;,LY%;bAW;;9+4kG)X!!!s{WfxTwxYFMfE8n7yb6lke2tzemK/xJeH^tnKIJ{Y?Bm^dEXhOM;D^a[b1aKHI)(Z0morCtm22]Z0:9HN{%5nEX,4dWYC{bSULlbVGd{r;b6ZUlcz}/vCh{3#S^io4Oy:Ghk;Kej=_D/dt1$990(rY7F6]$lM3ldt.2FcOI[;D4B2P{BRNr}J/e1?=E+=KQT9]vH6F/@5q)053$qDx%8vH3ur}0a0{n34)!m*SgknZ*9{Tt0$e45bw%wMTB{.Pw$SmSww3BE}z=LBFkcbv6k0VNx$blTX9^Ip[sSCPeVAAg-v:behM*%a57W8/RT9%QcKezBH3K!WIBg1YH;+8QX4.EsD^?$?_wHG{yH%l!Jj@cu[%dD%jAR4t0U6U(90a93_*L?y%C(BSdkq[E(/w2ZsnwDJvrBql}Db8:ly;RNZ[JuO+Mj,E1rxT7mn.nYFNM/vL416hRFO7D![PP[=(#:C-ucKNixPTXjL3n[Lp,k/0A3^q[I1aMWkOS;]M)VB}[jjAM8BEaYSyr]kn^GMdNPDBy4$2}*ai(3Y44/0j0-.cIjgQhNlVP:pqMdTo)T(w{emCAx-A(zDt1SXqUU3}MH;yB#qqrseo$)9_rd**QoR8)xrr]y0b8,lu!sVVLthgltn%a4NkSZ6{Nq-d_/CSLNln{ZZ4ax}+f-S}}9x#Y];NsqtBMd{#QrlTl2xL=Eevx9lc4^W-5uDy3)PkkVB$kJE#lMMkaU,DeC;BWPn8rBg%TvYOIzFMm([qk1luXaHWU*U3:#$b,W=b9t22OC(f.KR^.hD2kaRMe^6td+82zpwj,=}K7:Gq85RXoT(a,/,so2tt#2FQR8]#OdvNI3Q]Bg/,rO4[rbcm}%Cqa9tCMQY^UW]JgE],ZHX:0;h%b((51wY5=iZxaQtJ6^;kkL7vTBZOPvBpCAIg)M3X.RzjbRMWY-oy]X3VzT36JPJA)2C;d!P;0t;G(jc:9Z}U%fWt4wd5WkV@7/{QF$_eO?kLonDwS$kEFSQ?/PD8u+,O;Q4,Tcv]aD88]S2)eS3?V%;GvE6PnRP5e#f*^9vL7zbVb[v#/Y[r;tsYM8Y3o2gb)#eycR!1yWR28VP{g,fy/^MkB8MMxZ[R[nh9o,h?@V1S*v)=8S7cARsgq(RJ1/q9I^EtgTjtnJqyuVHdB}NJBDk,qmC.GqfixJ/%(UnEwB0:WK4+sL,weEDgx/{Ih*^H(-sQEW8uMkl]*p}x.R]G:192YSmiTuCREBrDQ9)xQ.vpy?We.]Vw..]E*fqDLLKbjYPUONJ;dmYJJsDk4Ul0Nh(oVLh4M:?I4Pu:zUt_ecXTxnVT}3y:+%Ka4?Qegb,9gyAi2x);ey9[F2Ej$G@1+,({ZkPMXrJLNGBZg)}jOcRvm[Fg:3?Ai:d#}S?^ATke@XT,Larm)jhr@ILx!*S@^TqC3.FF]tg[_2KV*9p_,}k66$Up!5a(225,YDN}hA^W+K_$5YGkEc)N7S=oZXprZ?M_JtUYo09g:-Buo5ilO4EXzFc:WY3w-%gL=3Jc3$$OSK.N!yW0=pyu3)2Ol,]c;?wPI7*^=Wr[M8WA6em3!6Q.C4[C;!J%_EDDAaX@JK/f{FF_FT[SRu}U0LNj.cg%ZOjoDH7!q4zT^CFDC?IB5174g}dEA9X,l?gd-ftu8S-Dl*R8=[;3eE,yZw}6C]D74xAM^QPaCLk8GH?!z@=7E291kgx=gtXfHsmcHXgg*D(z;R^OGh,a.39cV;G$1{VHSxgb:DD05Y5%p.cuW$B%C3rML5n,jEP6G@F4@)fZpa;3c2moN:wan*?kQ%hXIAGYqD)*T!Vo$#]hs3m7QnD:=S:sC9qO?2ssxkyyXvP7miI+55;1JnvA+Hi4?^INgP@;xaZ4!IXKymeL_88/oVg!wG_Er(uY5ubO*XuAHut{h9e/OPw]DDnNE,o*lpzEMP@[,Ez}33zCQ-EnO!O!T/uRB:)i]6r:dfsq,zAEi1$i5PQk]0QqETr=MkXRa5vrgG}RB6/ZdE4Wwpi17^e(Knv,?xbU.Y+fF+ZH]yAy2BOAa@4n9y=,Lt,)-P0pc0K$gR/gO?hwi3scJoNxIC,y2.nM8,}o=b)9lf-YqE7$*T4b-[guRRF_^8(Y+0n:b%ium/z1Ia:L+K9QenTAp!:QOLkq4bDsRwFaYpQW9L9?D41tE#g1Y_87-F,-G#Qf{[@6Qi7v.zN@E;:1}AC.8G}/f:wY,vdX/458[1Tb#6_SeQ8A1d,4zNi@aeleiP#Ra074qe@/N5sF{u#xPlQaTR6Y@sW5y#/Cy^CyBbNRiDL:6)_%7E=h+b6wi%oVsYvB![,kGj8+8mKui0+JlO]ZeW=UbNg@:p#7kt5j{rj9OD]oPSP@+x@%oEARhZoxlcGn3^0QX^GFqTl=S.I3Vq5hNhK{s4zq0#$IfM$wdUVO9C@3VscqG7QAEbi8MIG{rCVn}qwY*v05r^Tt@(WRf*7#as2}W4{x!*blZ6XJlnayH8ZWo0*(e:5h=20DrfL9F@xm;X7axUh]#MOp8qgtd#hysG[ocJ@wEf.hOFVx2q%BgNcv4e,nWPF]uN:vpAvt%RW!,oAqxjpWLh5_HX..zQd1tsuGFfelGs*[EF4fI2CEE@$X]5dbC/=/j6cd.SjCOpeZaA4R:UbHFCa(myIWrEDmwM+:yp8h.lOZb_48_u]F)z+}7GO5F16}Ngb.7iWy+.cV6;;9}Y0M6lSAT(q]Wq-RQZF]GI[%v!ZlR4pp=?(Oe!N=lKy*_*:3IJ2V*j?l,ba5xx)E@;YSA(^,Px0Xv7mrD4j-PcFzGXGlZh:etewb3Kc4g6k?gi1RiIp-^:gONlr*=]OXROApr[ElJ3O4)WoEUT,q_O=vP682S($.b^H#28Dd}{khC!/W=Iq*VEfe?}[9ZqF3i?DemVYt$pO,rDP8op37]O2.@9oxH1C]0.;?Jw9lRd4.@8pzQeGFs,ZhuI7-8UD{:+$kt:q(us%OWs4LB@=#l!k[Dg$28u}:Yvi-OYGrzwzi_EI$UBLHILL^i:!44q5A^H7bw-zM3v!:UXajR(WWeJbi_1M/fO1Ej$*PFgw3}$ns=zg3;ZHa.B;sdMO/ljCn83qMk-R.bjM7#6CN^EpqEt8]7B-ou_yM#CI+W/%fda^=}aTy.j{_NJ%6PwG)}N^kz*/XQ9bT-xi%ogmc87gnog.C.^3=eh*,d)4uYU+f$[KbfSNeCAt}dbx/1XB)._gaA*F^prhquE4FKmPTwvyz.(ewUZJ_XTA[2J6ScIv5%./z%p;=C8%wa4xk1eOdE-;#PDjetw6)5)YXyM,pKWgNOAWdTB9XRS]!#murg^KZa;j{+nyL0KcFU1hcHixI6hspVaJ9fO-bkd$qlq[aZH921}fxgq{!OI_uw=aS($PFj/AR]lkxJ/J-ma^Jj%(s=)h]wY,?5ZQz1XML38JNga5LpFN3kYX2%}mhC2@rf.rdsK]W}M)Xt@?N$fREbqCgL4p*,yyVEDe+,8MO[-Xap%PV;QSf7@e,z6IySxMJO[;HTi?vS4.cCc-WTfj+7I{kq!4U7*wT**ndfVIrzYGm2-uB%4p=lwv*js*r[*KIuJ[+q)rJ%[Dzp]s-5RIdO$cPRukUSP-9ePTm.JT0Jkg)Jx5]Rdyj^=kr16m)0OvGV0-A20U[Fmbe4P1u^s:TvyM+2=WrWJgFDz(DMdpgB0=2fb}?VJEXBbB!8ZL;o;4%=+)[(g*h0d0iwnPo*qRL7%:28Z/]3]LcssSWJ9VjP96BM+.cV5a?wSPjJDdpRL(a^CgoZO:H88S3Y;%g-Mx$%knSEw8TkWu,O9H{PAe_k=qoBjC*4P,G/efcx7?..gVWv1?Y0pMf2M=@W]A{{$Dh8K4Jmja2T_*DPy.[]Fa-vE$beISS]_zr#g]!#7RdXl1d41DfCO2,n8wYzGF,r5TetmLCEdvr,(,hoew%$h.157I=Gb=I@c(4xdm(ZcjRA3U?pugmu3@^rkUxvA}jFXJBKL]2.LGgQ!nH36W%l:_#LiYPyC$=#cpc3/xU?*X?y;6g48[y%(e74?%,kLEF[m{exf7D2JHybV]BnJXHYGe(*.Ugx!Vj#GJ#HKJwGMmIn#usU/c1W#@=qKb8#:X.[E[/q#j4vA+%Om[S7_e08UP.6[[}bo_ViT?CRI[9?0YQ1,XqBr8;$O*4/2Au!OiGJEWjFJzL1C$Asl^nG/r?wzFb:v$a3DElyo%P$$X-2Fk1,bF4zs(MFX(%pJirNW/m}ogLs=B]fxNHilbl[6Iuce,I$?w2Up5]@Y=h_qaViCSqfED@nNrB-A^H@3jN{V}R}shONio3fo%6uNSmZmEn!)S./=f:sU3l@@H9En?z8kX[.6b}K[7qcEM,sP5fhW$,Cdj25=h]zl=:=4G$*oeNW,gq!xu=fd)alt6M8oUgWwp_@Z_vb;ciaLi*oiN?0]YFSHvt5k$eqgFL]:jTsX;!EgvZ*}cl9Qj)U@2@CLVn.oCaHn7Sm,Ba]J9:dx-HclPDp#r7Gb[.#9jYPiCNFBm1[iSv-5HRf=LU7Za/C?-FCa(*oxQ64?s8^@3LsYAcnMdVM@PY+p5.8roXfx^DP}6TsbWf)kQ1Z/O!;nRMA[RR:Jn32]:Y;mGQRt4{gVjLuIA9/aS*$=SX@E.zJmx3)_o)S5Ft/Rm(dN?gaeuCV@ju8xq61;BDF[8mdw,xAJf:colLdfSzg,8NM3=Rrsr12UNW#Dkj(CAxK[yJj%(Yz!OeO1y.fjqG8rOWV?^T566*6(Q3!gJdikHt9aVL1x*0Az-O[%m9beCYq,E9jWLL];L3s;8viQnwlYiayY?qYW,p(1W7fIC*UjlTZu7Ai$q{EAJTcb)m)ZcJvF_iRW8YEVm!pHRT/YIEw:.r-qlHn4SaiP,mic-^-U.#Hz.75j))4f*#F6TOOU(2zt;9#Qy{1:#]GXn.{LMW8b;xpcg-5?!+t?b#_nf*-^%szuk2-$LC!uXxO2O+t0W4pdVk+1j:dq@2T(%u9?h0SS[)/7y]m;,Sv+GL^5tJ)]Ux$vBcwgrg[H@d)ru,I2[;U9Qb!v,USn^O!w+IwSQ_lIoHq]GWuC+ijM{L,PfmXp(d(Yn$!UawqT60Brbb(n:Vt4)ojn(^pbj^?0JcoejEaG608$G;cs(D(X@uLI,vvV1vlNveXM.[^(L@Dng{n:xw#7nw*,xiv(d.e!I/NHYnCbYE60nUsW[D3ZFERs[Op!BSIy94CP.[pBY9p5[I8ZJ-nytKQxEhWM/9?T93a8?{r4lTrhb=}H@ffXx7x%atjrIa,6!1vd$4Dh:tZp,%Mkw:5ev)[#jgUB$[QPO8U.uoTmeEmg1SR-(Lt?gKk+{4Bi*lgVh*6jBG*wOAfUCk4B(l*f@dV94sl^G::p]}?y.+GpP/MIO;b9zDl[(AELW[+g:k,%n^amLD0j+76jJZbn:70rf4RplX75ilEVZnko#vG/tBnV*onM.IXg3_6}mxXw6Qj-N}LLD{wKP,x%E=$t2P]{Ak7qftK9t]LyQcRcEdth#uIox5i-Lgp,0-^KILl9oT(/dlzPbJ{GTAS.2uwHZYqNK}a/a}^OOj#9/993*rQUtGrN}j^yNM$[(@iVj8#Cio@EEwQ(V/N@(?y;oNb%J3qJL$0vS2mJ@z)uo^JGHUyL9M!CdW9w=T,iF!sQAis.moWf2$GlSx:YBy:WiUR]f!Y_DA#Ti=2oBVIqz-t:i6$v,uPuvI]S{RB964iiAKhg@rtj!HtNLJU2=e_[K1!5:!s;j#rPl(=,V9}V5DPdZ?U^;CI[pc.4F1}V13![wPRiTFfdzsI_XNIP3$DQupcfZ+8:OMqS4KorMX@ENqDGTj/m.(*FR]K9UFtVI$B5KhO{OlME7Qo76(Ogqq{r$70Ne6Z$s:19Sg(_t54P.F(ji];yFC_aSYLsMCIj*Y^Oai(P,Bn4-Oo9Y0o?5KlS}5h8(GOQFg+LjJ1aBbH.vzWsv-4oSOOEtEF!/rE*}/Fr%QcP[uJWddj5AMXzC;x7z7RP?hzl/e.wvsqUs/0cn313oQFVCXW#Nl;q0+9wSn6=}BI{=r$90eTm.oc*7^vv;uwyxs92)lMM(4/RGT^p+,W}3r?@1/{uM1ktSi)Gh4AVh#)+oP{iPLPv]jn+bQNt9=J_2k6(hs,i7atIJgg7(hJZt-6nOa%ajmJ)c#}M+9r4]5/Qhw[Hh#J75R7(SeKlFdzp)Qv7!:6F4tu?=d!)-6hA}k9jsELb_aE@2._P2s[j,+epj0!-u{oC.G){1()dobp4]P8affp?[YDWmf[tC!M/{r_1QYSJ))s$2(?$}GHK*;)[C{W)t$_S6UaHk73AIi*IiJp+6wpoO9CUX)+muinyI4w^n8I,;Kh-AbeNQWo/x=oo9mK@vkSev^Ha:vUM6rT(;u?+%:lTO#L8Sg^2exKuH:8Wylr9-!$8/Ua+s.cmO2VsZ8S{z:Dw+^2bP*[dn]Fo;D*ppLjPTX_9.3B#h(yxuQLZVOaZfEA67G]M+%+)}=aX;AVaJF@M=j@?S4E_T9m9P-n2u%LO%V+z]$oQ6Z{)TrLc-Zpic+Qo+.}C+Ex$f(2cBH3Qt%p=6)1P.j{!N7z{8aPa%0Ju9%T*^XtXrOTIK!/W[%vHJ#cD$VV8[%S(oSCd7c-I2J5T{$q5gyM=.XJ]g/^34X2_?b,Z-^=n5*-)gVz#OESr,Pv1-)rA:J-JJ@A9)N9J{C6hI3-Z}x!DqgZ=xcfV/!u7$19zn:jn=CNTfl*vL#*3ze9gP#++?bJ7DZ66Z5f*ZFa3J8srNcA;3JnEO/k{]C[{sk^HZt8C.13ABk;.p%l6zd4#bf-s:rY;+L_W8@G{9m[=tEmI!6;?hojG]yR4Z53TD#y6qOEW!uuQ0GO$78Vyi],3j-tH*c-p3QydX9brV2FlF70!d98hQ#7L#4CUn*iH^knIH[d=}whHJR$HMG23iC99)XNloX(mr!H,g+;wyGs]hFzy,E*e./P#?EDg5gm/2!73Y:4,nUCk.!M([-P+iybiHgGaXx.MH--Y=xF@o-8c6RQn@OiolHgZ@vcUjgiTbd=,e?X#D8Ly@r90Nd_nk.=Q?Op#xF%2o!.IbKhC{Mptvd[#%3EP?{q34Cem*2am6#!.2{wk:;4#=j%[12vyNq#,9KHMW$GkFH:PkDSSM3x)E}/C^oxwJ:fbKT#s{SyUL?zkyetn!,r(D^9-_q4igiYj)vYfVD=6.T[5fvA,wYq-x!#;%6r}8k1=FN@ED([X;RFoCeYmtq+GcijPNywruMfF].b^hn0sdMO:y]nLjIQIEJR)HN^U,E;E.*NU4Y_}%TWH678ql1h:}{nvc6vj-s=L^:soudu/KAiSFk4lSO;9%J[r]2n!zylX7%}a#$kmIu+EzKhYfc!/Xd9Lwn!br{0!yc3soVF}r?ovf%}!?m-%dNwR2Fu^T5Vq_VMk_.cc:nN@$ABJBp0JXt+*;gmunKQ9LkP%:Y%V4YF-I.)#x206,HzjV!GBR?}M7?z,@hv46G{YLJ^1NlkTh%kMM[RGm1Jwz,k%-/0F7p^JtfZqYvn?SHedS7lZw6#Wm4O^-D:}czT[Du)sV8(@A:5[,cqUEz+((ccL%cOC@x;u$]TnC0sKzc?Wv!)czRDVYFLmf,41TY=Qg]Ath{?0c*EYlBhFHp?l?s%z[?QcL41GMRFD!WvaS6rWFn7pf6)%a[=Is+@FHVqm$H/@bN)y$cqz_a%0L=S{kc%9JU.ylFp]Q)7Lcofu2s,-xI]23!ewv]lgBHdZm!7JC:[bSFvMkC-GGf9PWJ+CsiwnQo5#Nr]66L3PiGOP_IY/=JVX:#Ma9y7VaFdj#wgsA#{Q}04FD5:T@$1mvfiXh%X)SZS/p:Nd*ZKKG8IKHBDFct6h#RNZ}.loE+I.HV#K-OabqE^AAHTCZ-r7%h4XoXY#X^a9n{D!R)MaknyrXs/G3=n:l/YI;Oex5mU!_)3xvv:oX)uunAc_IU]D{GV^55+goRQ%?$EF5OM$sA1=z,b+H7EnnT:o4hOy+J#M/jAu3:rU2tVekpV$uF^m(Lcd_M3+q*wt7@/{7f@Q59F{u^xN45,/UpLZnKI!Cw8p0${?*E1;vk4.Go-L[)ClJ?=RD6-D2#)6ADVEfAwgve_;rP@u@w1=S-@q+FQghW[0Peuyv]?DV?-fcsq:F-pfh28N(XGAnTY8{6F38opJbgGEC2qgn#Xx:Qt[G)ZGbrvklSQ1ELLEM.P)JaSkRJ5H6)MftqCvr,n#llW21+cQsEkt;:u1a5lFIc?qR))lqp=hQ/V,Xg[yFvXS#==+RBH*P+y8SCXq=D27qG(Jh:J{hd6aA:$Ih{@JW%OeymDHY?[jm]66H^N=MTwSqoJSXXatLhY-!%e1=#_6toC.?K]yuzcUbVlQF(qNcA,^C;DyIA.:1e8b_0Bi-QyzWTR6lHO-_Vzvo6kcc}:g0/M[du,85SZ5raqDNWpEa)!ORT6JtR4+faz9VTd2115[p4t4d{N+[N0FL3f}io1Rbe=F3TV;MCG[l4v)YW(6B0TJ1S9eXK[mlsHY]1GM1Ct%uvhz5_^PNGv2)V*YE[=#GUCo?}b)N@CQ-v#Dd;sT9*ba?I7,bT1h$Q!X%=4dZVAzJF-L4nMxF%:GO{;+2j-bqcbDl#h,UyI6xX6{23%H]=f-RjoCuXvRx-7}FeEb)%AFzb^vg34i9ei(q0O,yFY5#{Qm]BWa08/=aq!j,kmFB@31;y%e*=YPOQLNs4xLRs)LIDP$+ZDxYk)-}%?i%PXc+=IcQ;5{QfR:f=sRYG[.]vD3E4!AXq6gDs9IheAw:(/X#t7_RTOSZ/PUQ89O;sZ4_UG7q4OY#xazjx-84.oxj-)zCcC^gsi%(;590,B/bv%p}z6k.o=J^rz@N=Roo+4$,.YXS2)d40_ZCiEQ#JA8^dm,D/W]bKqOxr7Ws7qj0HuD#X]ZT[(p:T4B1fLuddJhDFk]W?RRjQaPOM7ji[rU#^*ZZA],]Vn(R4Ap;y6wu[;[v0Rkw8+JzI;?$5l5vO}.J}^M6*Vjhb%}Gvw/Z@9fvdwf-0WLBgspGod+n.,wE)1{S=xf+yvTm$Gi,Ql:KJHxhB3/!9GAm3F+0F;gjssb2$t@$KcTPFeJ[8dXzX%j_m3kpkgS*OGG%9s,1p@%zrErP(/Wl{ozq)rYW.!:-82GAwT:W.yj%;PNR{w$ru5Ne9Nzit3s=VtXp:M{ss1Ove=a2c/[@#)v9MrelZ}^vf?UlB2[])ZjkSK;Syrxi42HuWjcF_{6DIQmSSjNMrkttheguw/?UG}gGmi-6WyGJX[0!Gj0?B%{l!;wt:U2dA*7Lyf5k+0yep@$BiS8)ev1*JV1xKnbqNU%_?1ZVnm;fb8+QpSN%iy+oqZ?idXBo,lf$PG[kW*mGb$HzJYEGK#:Jq1!)p=*BW1O_5-6M?85vsNd2sCZ$ZIF{{v$5/h}#.BA^D?$)gnnOqWpjT$fq0SXdyLku=hPBLC@2P),)/tJW6t]GL-3$MsJYD.sU^gb+!KT6IA,B6st!qfcN:e=,kJpqWQ,kw*L?Sl08^lfOsWFYuT1:t/Z0WMT.T2boT)]zmaY2P0v*O#x?tQ]EqBo8B!r4,cSc9wX@eW5s,U(TAwfshU*]H_%66J^LY8g.EyLzQOF6_smx*0FJKzlY:CmhF3$Vj9P!{(pONb$9pXwOFW:sd5sUD=Bcce+AaK{!@%h(lmh8,u)[3*.L5#{fG/n,./d+yq^qbFTh27znm{3lF^*t6TR3UjW?/rG.R:^Ay93phcxvb[dG2/+@-?,kLC!o_FKouY$37L2nMiUiTJ@ZY#wN7hDcvOo7w:;.7nM59fV!U.=?0,@m(Z9,o:TBx!pxIPAKBLo8d}k+lJID%LAC)itI;NQX.1nqeOYwUC_SM.ozyx3:@(lR$Vf8S^b7WVvy(i]bxVX2X%ZXFgmF6eWr/1uuY1q-/$(9J!llA{Qp(2OdqYTa,iXz{/]WtmP9U;2+I,J]{0NPNRw$UxA,tYin[(x_@nzSO%5.Y8tbndMH/de12?6n-[{HoWe2gZhNnxp%%N1b{*xB7y5EzF^$q^u.75boo=IS,}qTV4=[i35FPJSqZ+-S2AG:dz(,icb+@b[I%%/qo+4=5vF+WQMn3em12^/p(CLUy5kJW6b.FE/[v]W=n)WEPEYS9PXnIq16dPW(hBOcAa5${YI*#BT2ox+hrCq2fVz19q^$!Z%PnKA-S!$P,CX/MDx_p8_Z*2li!9L#PTiM{o:=(Q^rAcJ(P1tv)qK9_zh*[tS7-boWRBO_HzNms?;Y$37Bu,Yjfp?J{,EH^m;.*-91_o90Ne]-NE+bF:q,yWMd/@,W-3Sm*DguhK))946wA.;Nj;4*?,8#DKX:I!{(ZnGcO?m^p.R4xvYZ_/Cwd2{@6Y8TOq3Z$DK:7GWxtM^A/xO)6;+S*atJrEFcAd?mvc9g(j^QBKV/1)kY*l-liw-E8udK06uxi9t#uS.CkGp*Rk?p;?W?JhUA+blmy);s_h_4SkNkgpCNc)_UFx?I6v)Re2rMfVbgq/@ZC73{m-SUK*0ol/ct^9f)t//AKxgqG{(G2TO$/AB7Hn/vkw+7W+CE_2.2(V9%Ffj74KU3fO#C08PrS:VnoZk;d!?jJjsS50kMfS%9+f2)B@x]Xuhg/=ZdZBb7:nrDqU1hM7q6-^cYRmZAZN]H3#3EosvrsI:wkZ,^1RS$na?Qg^-Y7@GID[7mbBCEGCq@,Wn9t:Fy-:@]ndfo2K/I@HCAla!]n/fH%ej3bIL_lQ(UG$0iHghIVwK}:GV7a1C;JNq[5O,)v5s(ia/aP:,8:BBy6ei!Ka]=r3^AQSt]HWNc[$Fkd@vZ2k%:7%3?yT=TB!:;jq!e+Y5?MmJfD,Yc$YfvPtzHK/A9Hx.^c@O^B{5J/Q*x.-j.h,0B-EV1KwWWCOfWp7i06=aER!KH9cfNh0:uB=[ET)7N2[$#7Rk*2r}]Smhi#IWz+wUQ]Ux@T)+cVU6IZ{z*of9wAMEf36nyl9f2*QwfVlQ(qwe*Kl0R@%rsIOVM}V*K024FHO!LTuu,,L!3-AB7(%:CH*^l0:#olj.yp=B:!qIQwr)xb9XNy4mN+c48l15g;Zih[C5=HiwKjqRpiB6o/-[{8d8;A!fprhU2*m%W7vZKnn=[/AY7/X)c?h}=$RX20hhnz4$ir)#gLfwue24Uv0*:X81BumqEuS0](Ca?l+PvRex:yJ@]IwVu%dHqV0StW#vNgr.IV7BgUUWhp/*x!xKO!(@sA:7.*{9Wv%5msSR_I;w0#:b{?Yq{KVpMzT(gFeZc?%O9v$S^BNi^K^kk55?](DbAdvXrF6N-*xtGXirL2I/onfZls=3g#$NLeHfhhk+JFAR6bj_RQ$D0JNS;BR;3wenM:q8i;zp[q}/Z3hw3h+c(Ql%nksfY2,kZeCXsP(OCpDw({[8{Y1m;6yNh=Nec;;_;RYUM);ITh#[e!IMtq;;VvEhcgTe3y3FD,?Xo-,,Az,b*:VwZ4u=DClYlntZzD5Jxq@afc5+hWj5bMNmCHrLDnD=m]W,m6I%e+5aehyUBgy$+i#+CHKchn9$,){LSuC9,jX2=dPomu-s7(jn7b3kJl*!tW3E!C%kP8Rf^CzUcUDVMvF+*tJW[Uv+Xpk0IN%ZC.Gs8222V[2X,QP*:x^$Wa/Sc-OevMUeUTvBG(qCf%%qyH1Y0;TQb}0Z.S={-*fF]sJD8cdYKBh_z1ADmnf:ff$:$lzn4N?.FMb@LTND=C-Kc{;]G-rr+?Vjd:]:R)8%OA^2#{E[y45mW$hj.k*1-dfE@}IUQ[JGh2nJ,4WqKGX46BWLFgz5=vW#I,J2qDfQbTNUV:{m^]O}3H*Ln}siX5h9]n/Xc1$XN$GB3n7v5H)5kaj(L:c:5XZiLtU!7w]=8GPKg=Y4cP@+ZCn92uGtfoOZiL]AP$MiRR?/BD%3XN;F#Lfp-dVVR40LXATu,IFZDm%4Ss/LG*GrjON-.N{y%cxq2p=4o-jo;Hn0Y2.hZp61@6+H}{e;yVjtu!FOi9U{:_pOKL3sdcS^1}ZY2*.8:4lnT!r$%W*y/TK=0iy$k(DKR3Q0GAAJr/]uQ8tmtW%OI5T0!/hnc+C2b-#,gWF{MZ0PJ./xW([=9IQlJk3ED1awuA47wtss$.jOFu]!Vjfw+5/s+[KQFiy).Kg698kZ7EKhs:T7{vh:Sn_0C!T;z^RIe7dsf3)hu=cY!az1,Tlkjjf!(Yc@5N?,=O!c!5/p;sb1i.Cm-Z7G)8bp!q_QzXdPf-Y(KomAB5MH{=wnuY^q=wuGi{qS;O[8s]ar3+Pj38}N7n)#.(Vm!^U#_2jHNBAx#E4{NAd,jM3)eMLsHshn:8l8uwtfBxg2^{ALUBiN:U3c4,7JD%R#W].DiaI-O+#=Pg3#.s2Tz-BUz18f@c?LbkmUgcEXEy=-=%E0O^yz}nMzS=-r#$2uhzP:23J7Xu$-Dc2jK?Z!.nZegDfxu/hm#.%{HRe{c*:ZX4bGJ3(%kUQjRA#Gj]nQX@LF?w)[ffcB(*3*Wd@IPZ2rujTYW^isXfEvQPh8kkHHGwYSAyma1OhLxF1/]HS}6}N#:La8T$.)MjW=Shz}+?Ez^..u?jBF,,3fVvVZaYRcF/=$/rnVFc!?nP!RqUN#n}MD*$[+5bFyTyc[teY]@L/7fSO/eG[heDXUY[/Mz:l-n1tdOF)7iHtnLBZdyB;(xNo4aoVgh8eQAQsux=FwTgR94I.M;DRkuwzn^{CE17EJ-n3D7(gI5A,0,e]?As6uOtL_5w0xv_f^)J9WGE=MqMz]qWzLD_ccr0.SlXl$hvS3qkPA^O),]f^E8z_$/dGPDVGf:;G2iiDudMG)8H!/cVndRKPma.y-%;1[f#%py;)]D6@z@k?%R_]p#l]r3b+AEu{mMXq9d@NFrRgbHo7A0=nT$Uzk+43_R$wHD1,b.dBCEB+UzOYegn?bD2wEva9-q7Y,0ZkZTQ@G_=ch5PUO26Ey/2D6g,*mdUxk{mdkR-e]6%3Xu?*MO([gCs/8p4-JY;dRdk;gv7c$SEdDjB):@$l?uly$=YfC,1DlHlXYi2!]v)?-r^]LfV.MGFUmQ[D_r:ev@vvO52Ahon8)uo.?ERhL[tY=phPEJI_?YANUcN[B2,?G8feIGG+x:K-8Wa/h{UD$8:2hC@U1LjSLnk![{?vAml,oAFcL)qCTZVqf3r/u*PP(YsX5=YU6ujZus:T[jc6G/2%l#0Id_;505jaw@CgN2T4Kcbb,MUZPF524sn^uD+-aOM^8!Ym3TFWl:Qwl#[T/Ej_vt08Fr@qt(#c$w%]-n-L7t]!dq{8j!Y-w,(9/(cb2!ytVf%ubl/.=2v*=c20V4wwd6--NkhS:TA6FkslQ81E9C_8$cEu614tUa8ejagWv@?A+nATEcgHB*u^@,,,Sa;3XGX:e_;W^pC59yq.o=.VjFvLA]6}{YWTHo8uGm+Bk#A-y^MHbJzw87aF8x1lEw7U]usutzP/o7:l{Y.fXnAgG0ys(DOs?IW#M8w,@.,buK9e@v1s^*YauXou5?-W7x2k[F69ncrsBNHRIc(1%y%HE3+,3kll(I@5LsPCa@HrTk3!AYa1+*-Htz=Vm#@CY%:O5FK:aeV:2gIXk,zQk:cV=k%7(6PS/I:^0/XW]0:kdyGn]-XhQV)T^{y;F9e#rF4/Y=2#D4[(=-Ag8M0g^[T^[(Mg*Az{R6qO6=-1n++NY*{gzF#6Fm9lH*QKO;G2SEI3!Z0h;iOUu8j8T^rfx!k4X@Q(bLeXZj.2Qlm[zst[o084kvIW,;uj?q,y9Q8vht+bDobYk;AqTx:Nn7$xZ]6RaYeG:Q_b7O;;![%9n+l;va-J7[L^B4Nygt/elC(m3$^*9=3(!7;37YH;pk4F!do_Z31CDuaOqB(sf,HpAN9SaRi:Bs=Qiqjpqm8CoM,%Lf7yIC$Vx1ZZ}e[QE3i0!y5vA-Q0IvL^E2.M$;{OfxR0jk(t7pnV_Wv5GQt[%OQ=C{y^usKc:]q+MhHx:P]OV,MlhFuq2f2$i]n;Sog1DrgRIxJ-Y#;disk}_Hs3CR@],-_wcp[QGTIz;WdLT3?EY{+jJ2+:ft^(^W]6m=OsmnPuCB]a+QoP;?ew%Y6;)E(euBJwD:dITa^rmoH/I!B1ttXHE/Krh9RDu2Z+V=y]RNL+Vn9ykM7O!xo7u)LW%gI:]+CV/7O-qjz#6Q+FX5dW=/!;F7dPE4]b=R#YS@Mtn;F/f++_uE:fe_B7=!mLHRUrpW[n{BlO_-},}Wo^Gx4@1TDkaHMy*SzgI/Ni^1]Anx=eiKG^1a%T_MyDV5KX)Y0.wZb3R$/g,DoIc3JGZV7^@A;.EvK5[#d^+9TJhoKu(pCWylORNvx!L,h83x4gBea0{)7,il{JM^T!?e/;Z[u.,HDnHpHqeYP%Uo@WeqJf9j+Sz;Q0gO(e$)5n0C%L@?E3Qw/A;ndTfGU0QMZBpMVBV30E-;}r8XyOqk-wnf]7FR$pgp.3*EiNgUt*XxnyI]iPzg28.6BfQ:IMz7+jILXkB{1HWs,+S-L$4W{nby9/msidluzfjq4{UQ}Ap!7/$8#r@^1!SC0DlI^uP*w6).kofZUzT@CWCAK^WCc1lbX[CHr!=3Xd;@da+EDrpV5{b1Tvda,(PmmVZB}RXdO-v=$htr*xH/cWqPca=X0Nnd+vO1AUv-Ft(M/B4-B2v@Svl$j)ug?g:[BjbpThO-%FfdC0Y6ULB}I%$ln+p(j^tKVB!x2@IPF8%O,moPl*5E*$sSI/Bw3]vy@z-+nLWkZz,.9//rzy*)Q$OrrYG%xgtJ(*!=ZaKTJ52/;y?#+0!{Im{++kn%cRB$eO_4PPgg2$OS%0+(n9v?1@i{/AmQsV*DmHY+KV?V@q$zc],m!aHjIcD%or2D]tKtUsw@axiv#kWL4K{X1FGAbCMODYMe;i%LmUdO6R9e]qPlU3+^%ohM]Y-JF5c!d%WE+;76*Ll}ptJ)::wzrFiDNM=(,ewQqaR=FY:H12,GD6A1oU0Y3QI:zgbIsf=+=_BX}WUxU2t;_HFwOG5CTvA/;ry15Rkn6c4sHt8N?=l*!Y[cAuGy#zB=w#eGZeY/=sep9l$Uj}1Ihjxp_bv@U}YI=UC]VzOPZ%e+8Yhse*mR9N_b-pUKO_Ob/AJ)IK=$;#4H1lT2XF_rmS]-ICKN!Y@Z7)?FBM7#_1?pjPBeMHTcrfU+F6=r}ucfemYu_PE*W,NClNraTW;BW7,)s4+3w2W=#h[Jj)]AL929$+oQ:$k2f,XrtF8@EStzIVlV)QSBpY7!ST[p[(0,G-ssv1;,,5i3P8j$t#NmVJyk^QRB3[/4:f#:je7A-st2flBc^vzRkVkR%rhkC:^OI7A2Q^DX5X@xB[PZ.5KCEAzaN8Q{2yw0U$!]l7(V*^=)gpm(/zW[D{JXZ)b3L_IwUu}vYXUr@$x-Y8$Y,ue?t}m5o8=o_J@^vj_w7$Kau/[i93XHQsbf1Ua=vULEDQCjGE$EEO]5;12yb:=IcTanU@;GL6a*_2jaGUphp7aiRu8sg,Aj^GjE#PIMGY2.3=Xn9p7CphgfTxEb[y=T5g@c!D$KF]T,l1EO:Mu.M%T%A6=,-]aXvu{rpHQ8P]dp.]U,.V_Df-g)SB=%$C-B,5kGiQPNqK8acdMTd5B])v+98![Q[e=ko*^/9q}t^2nuJWLX29?(XPeBm0ygk;TBh?0:,81fKS_g[Kjh+q[SmeWv^TNOG-k8@%Kc-xpP2NqeZnbQG]+1YOws;4.kOq2]:$Rf]WF-bPglZdS!Vw$^XbXwXR5+L7GeJqau5A6xd+^tO7e01vxdLJF@X*R_5vRW%NMqmGFQ!^@V16O-#qX4/#]bJZJzfDrQ*QseG/*Ye+/?NFT.btUpB+oQS=W4/,T?]]):[m%borbNgjrM[SjBtF3BoqOJCH:M#-A4^nzh5[WM)lK%X.F7AgM^1u1LEzu+5}MuWdt-22(kM^=4PmrPtu*K(R(,ra.,lCPdA@qoS-xli,4x%)jS_1OFDJu-b,rX]{kmROU{kBW6#.6,_C7ye)#ep11,i1Zzs^z{KYvi%nl=eju@HOYn%/g/l{grJ@p(dyrrjxw@qnsmxCqWHN?x(KrNpD)?;v([$wd=BRgeVFq3VO5?,UR2^Rs}q#iB?ViOO#y7kFQqkT:)D$1)/.XuIGcsbf7RrVg+cWVR2f6#^.UA!Spf5Us{FAh)61H$pu^KTJ.jL3oVz-*VRLU8RpO/2[.TQyna#MVu9.NgL@BWf^I{BgZ;#iu0c]M1m5.qJ:c$%m]utz2+kuJTCCcBYW$z(FALjUVPjbKz[IEwW?qb,5]{ZCGBQWF;hySvsm9k{J*4%.E904RS@s^,}WtC{OTi7T?pDs+K?+f#USrjmFFYyweVa#CiK[K.i8u]EEE^yR#Co=mV$ynXKe0UVb@[Uk?yp7UTgS#B#KhN.shK9QthSmSq,e#(g(+tW3,19Zhv3Gt^pKPXv?;cq9VD%{rVpP$jT0?cbzpzSeE#@K}sdE:9[4@d,JopC];fHZN,=*8;QB.V8fB5E=iX]mcvKQ-CQe9ST0yoobioi)vf5x3Kzb^C7IO?TOrw:xSKm]B9!wr;-lK.J*ZfI%]2!G}Ak_)L-(x_d9C{ntiAo*+:L_,VA?ZS?o!UXc!D(OYv)B03t,#k-eZe8i,32(eAoyGGBkALB2oc.3gZnu]iPi2.}mh$?Xf#,wrs,m.);((^B(v$$FIaO_Q;Sfo*.@A$;eMkS2]S}*XKxMKtZEPULPxZmqi{Y$:hk-W/9).Wv[t*X]l/}L9Y@HJgLw9kxY$5dW;Cfo+dhsulpQ0c{^Gds)=o.E]5,j+1p#ImOeA1wxApY51/mrM?%gpDt4E{6]Vj0C;+r3Rh/?iQ@Z%xZ9/@Qv6%V#_zOn%lQR=mh*ITPA=HbqO)^w*dVk4yh(jK:SYy==jJ-4N,dmOJRP9Z}Y%E{:jBNGweL$dOoupRNqW[m=l0]?UZ(_E]q$h?@avXP/fy)T@_/]2nU*Rs9#;82UHo82SSoTl?,thW+VM[9I){n!@4991H!.IY#@d#}6L{3vi73n^$l)5u=axI]/3kjQ-[#[Ln@p0D)VPbNRUc]{2/o^QK*DfAAE:kCv(f[xAo*/odb$DJc4xmqjs]HFAHm4HZ,Yu,Kbi^IWG@=H[,nlzs[iLXgjFBVDQ)2}{nG-@2Q@S-Aa!H2Tbw:znl}=Qcn@(-k*Somu.g2K^0+]l.3!]OJI!I9/1B]R7@UKXjVs:RT=b??7(;HplVO/sgRo[72kX/4Ir16Zl@#C7*kOx?9EYdZ^FLdFrrBvtBs+GSi2rD[@_][S-jZcmNx6ey/SZv7WGtd#p#_^]k^e_L6$-?RO%WDMRIK^;y],EjrPRq{e}]zP?u?@beoz]okx=F0UbbdzZrHY+yp*(eh9Xy{mjXRi2v6^rYy6^rvcRz-GMx]g-u3)[cnfP4fAD-B$.?GNq#Ry0r?mgD/adybWYZUxx1(te?joc^.ud6{_%J/{WC?yZX6(du@i-1hIZwpGoKoa782txL*xI[%P9xcYd3Qx_s,(^_:phQ#YV+f4)!)2N!2f[5q^x,qV$-VF{RdCjz(gI]Vv=D/AQKQKl3y=SA0u!ecC,V04,s^O^@b@Qi=RYo;e*JbOM^caOoAXnb=*#T{l1q_j5$URMJ:nDD}a:M!G?^]XII)VENRU*^sM8NbVvm**=ZQ}pd0t:##}o6O8Q_AfgbqjlLbd={Iq,[{yV:^-ZV]Te$!kKz59.(Fa3:G#nHkG{lblY}B=@YNi.KY2a}e4Fp=Gv0pgbU6Nw-m=d5^oGkG411gP-t%mJHc659+:];n?^:bbp;HR8d!WNloy*ob_81[vx7h#OInfaOE{QQ,DF0,4qQu*I(,ZCM,]B9E:Prf7)03Ytb34)]Gnpju(dYnZWc-Agt@yeGDr(j8zv0bIFoM/73T)d(foC19Q1(_:=uJ6281qdu@Sv=mgObmU]WRPyZq#jf?X0YZUj7qw[}?*)d3kdaFJnEnQhiBA(TrwpdRyGw%1Z^(Fkqce3k1HJiSFfwlTr!],r9/?B8!RVH.:flVqecSkQagA$^eFM7jG_lG3Dsx@]qy3+CS-/@3o5tnFRs2G4pk_%j.0C-,S]%p5yPm83ppZ-VS3f!nz@l]$J(R@Zve=PY!^.8S=ga88gAXP6jWSu..{0o40Ac@/sJLTZG?q%)54%onMt})(3h)smtK_Bz=55ml/Cd[WiqNe##m6(*%eY(+c2_?6vqNy^qzrb:%Z8C5X;R%cVeZbTXQFvdT-BF4_t4$b$Rj9%qj(7[/$1py=.R?ri)S!Hk4I2HR$^6-z#k;h4YlS/@kZ20yumJh[HGxrRNthCjJRJh=[bxfXhIE%D?9@2s(o$,gszYw0J}:+u.e[2{xK_2V72t3UwY4l.i]zh_O7x8tD8xDT!H-B#poD_*vTyW5K2Z6*rul6PA{cUu#8Ta$NNsk@PIyRGTFt?K-K)0iXz5crsh(:X}Xo,uOaM46x]$@/:8Cg[PWK}IzkdZJ9w6J;(*C:;KVnV:]i1U+qE:!r5x?5*5pDiZ_WV;?)LRiL{70@L.::(q[jcU1,tt18f4Re_oR3UpUhpu4I9-BlInuBt$HRRy{MD$u+Cc!M[})C[t:H[@,jqco%sZ1$SdvfO1k-aql;@w@KaI%d{N-,SzB@K,+5!w*a_P7Zs0.Not2b$vGBZii1LtJk}I!/,2-B8:}:dlTgsDg81Rh3mbZm,h77]_YiikDtEYb@qmdZ@#ECUpyY+3GizSKLh-#_M!7@qz;;M.2-+be{ZeuerEMo^V%{p/j1cs2ZaEe!/3xY[kms+W+ty6ueratx=eo6d$^jUJ!mj9(V5/nfFGWBZb8qzCmg(kN;t5$z!}iOV-Cz+^w+VZeZe8GrMQVP[k5Ero.$xLd!D-p+v[+An72G!.*PfB@7^t@)?dUSU8SDO/jRSnjjE+5Hoq-b(Zntnu2QyDE4gwrY]YaMYxwI9aDdx!0iE0FJ^U$I5J]q?C{_@.HW0HxxQ)Q35NrdXGmHGDmD/:.W)N#Di1,XzKoq[JL}ICU0{(etURf8vZ7M3Z[12]XP0]I%MxE=?Cj22[JqO_uL=Ub;P#Xf;,u8HmmYnUuKqB!NX6OoS8nlt:]*FSe[aO,Dpi%HK=ihH1nzDf?8wS},v/.)QDd4vW9Ai[bAD^,QmeCm;7D@_]Cy-4VppY#_,Q6g+?bdSK2IuvXEC619l8?n{Uh#(]-1$JuGn_RJ!dJdL1cXDcfKtdErknw;JHUkV7z7%(rAZq=+b/-)qQ8,8;%FpfhN5s1Ogxqr,}h2Y+)mV7wCJ3s,c:Z8:D*]/Or./(8.CxTIO)y-L63o@UKN8vEG}WkYU:!%@iP.aywRL]NOR@n%=b2v5vUCY=:C]90QfO_2^LTMk]MOT^We8bY*:/pvggj}Ux%9!#p9ugH_?e}A:)y7,i=7Yb{^$0D,ST.6TKy(KS}u6]$JSA?!w4q)zFZ_@;C.ecG-{{gULTKIP@ybC.rIb/R2MK^gJ[]KQcJ_M,Vb;U}mY074S4:gUOGBHDhuSaPk}o[{[kB1B-ITmQB}wS6BY_kJ{LA(FQCXN$TC5TH5*I*BhMtoSpyeys1h#eKq.b#E*/@]3llD617qI9T*j9On]9mA/P8*7AB-?1YyG^TPpN!a=Td[8.5=eIM3](BJ@s;AT#J9Z3Jn/i4T@HePGFGk_KvT[l11poW$#APsy;iEw3,L61{nYK)eu9h!ZpSbFrR;D?j@^fxg5,A=R*#WX2Wu.-DwdN_LzX7qa3u+bLpsZyeRYls6wj4gpo.AH$+E.7{GE7]zY1q(1,jkKs@njuV8QIL=8_%g0Djrt73;8wOgBk@L6PIb6ApY=,-@r,+C2q!EJHX#BoD?2t9r#sl0F?:#W(b5:Q1fZkOOx)c/}[XXW$ApkxOSW;2Jm=Wdq[g839jbop$FlFkGxi+Y@5J,i^bP{c;!$e/(0y[%??/1pMODLZB,+Ig^Ug^ZoW/2(3z2w;Cn6ay:LpS#33[[A]7,@[,@$(a@6;0D*FCn0ZdC8}Ku^7{p?L_9_^Y:20en{L}(@q*euC@eV^}p6gpEEfa]?u^Og0P1$Y4Dsyn86pFu:LaX]/W}PM!,QYIG(?iD=V5T?}7m7H1%[s0fFEjW];#ipP2!HKaUw@etBj[61SyHen6jP285/53VaMTam5Un^yEGre[rhff/9ozdwJrCmon*QeqCGYc5Uy5/iYaDC)BEo-3;*Niub0L@=f{2Cfg)+W{D:;uJ-w:)p6RQQB=[}*5(Ls?%NfX6E0:Sy[xf(kOdu2ThJl(7QHjUS:(w(K}s=,+k=vk*.^]Un3jd4UWztU!b/$^([]2#4#]6IBeFCavLZ5#TN_8p*REh8lJ0ptpJ?cqkR;su]X/0^Le(o.3557AMV-VGx{;nHfYQto9@;#RtW2W]3yJgE$NFC39wU%4tr)4197y92;nzia(aPqQg%Q?Thwv/*mkhns3Lgo{S(K{I[EO/O9z)-k$qSm2K_FTuFXY9ZSXv8Q:,#P}:TH[UAAmc?99Bf7J{N9)(]jRb?L4sWm*IBu==BVo7kFk2W6{/P2#]k4ie^#CDg0q;XaZyu(Ef=79caXd)CR6(:jeU%7,K5PS.]u,R!F3,GV5JvYcs]ox-J@Lm{:7(UYLMfY0XVCb^(7egn%ys13m[xxZ:qL^/j)O6.EJt[+9.02z-+Y^8.W^L3=wlCe{21;r%h#STUGRJz43SV;QhNL0jI!GN.hpQtmhYD,E6:Ni,.y*xv2r!A*8+!9A07KY;od(w!Jca)KwH-1n]/%fdsiMRAmR49)O@lUt=)$6jNX][S$z6T=Vq[[(yCLPxB81,xfYtvGpKMbCt:5@Xi*N3q9/Bji}cU@8)HeG}0_H_7Ot5]QcW$lKn4nNfyNYlpzni#v_V%:,$-0;YEY*MH0Wqv)@2[tSZ:1qeSc6i2Lp3q!2/4I:J^t,r!rW_X4/kF#JBMV/+UntBytl)/)rxGg-Jbn$]EV]$i0#A%8e2_gz9W8yyZE.L5IW)DcgLjqrN1CuD]zsHa,?tYaUCg[LywUp+{rOeDuAn=ZuiC0nOB@Wyw,*Vd[!RJupjtqt[N${Ok.U6s]nuz1%Yv4,vH$LXNl:v]kz5F}D0OC5kryyG;X;GaQv$uEh1tO6_o?f[AoZ{u-DJ,LeK8yq_N?3dEYYalqB4nCKo_$5THbbf.[#MzB?R2qe==s/Lr^4lL:vfH!qGO?QkVyCp$uy1;]4EzI$M-okCLhDOMAK$KdMCTS$*KL4+cKr2(A+{#*@z1x($OEEyiYhmQm-1Gg1?8T+5*hwWNGv^]zMfR#]r-Ez]E%ieF!-OolDAy;6[t**dj0IIj{M[$O=Z+[AxZ/Ql,4O$2!g7$.Uxu:(dql8X54r%z2)g)xK$f.!G%g-h8H@rx.5QQ4T;5K[^$QS/.5XPeGfk]EjmWJ0)[1dybzI/m0UNTne!Q-/PcR2}87khcrTGuu1UI)FgVhX7Y(%PMXr04%yPQRo8wLKs[RXnbah)$Dr^yfl64rI+$cv?+,@s6XcVLH-Soi(zbL?/zaL)bygu1]^{Blq}9:3S^ozZ!FaOsVNX}=AwLUa3cs8f!hWC8pi[=[zgcuN]OvuC*N!F[7+kKmxSucPT97X09HxFc#wk-[Xu=K9H_lpO*/EFP2Jd-_+7n*E1[D,T[@eVxr^0d9LCNQi_3!L,KUk}$a7gh%y%NGnf[f;Vylz/H.JpIM+}H,[N-{3y+GJ1tOGtp$ru+%lF;@QN#X{[Vz#;=HQ/vxwIiFIwpE.e6_7gl%5Xfyc3wyA4hJlYWjWZnbvUisF(fXdO1VrMTbYqu-4+Iytgbts;Nxx/c@uxW}_G(NKe^Nex=mss)]5#z!GM4Vy4!=+Z#Y?tWM9I#*/i)AXOH)*Fp)IFVO[3?_,3_JW^q48A04Y*.Xvy{w@pfO/SOkFuu-N[V0$2iCOR79bVvx[vTKzk;tLx}r3)+37nw/^XTSW[*rp#s$UH5[8+GOcT?AUV)G9sNxEvttpJuZ:G%ShM/z-;8(c43^m-BShz^:Ze:gX#9#xI(Fz-{[$RC$!KW-:[G?[P.9676.0,Wm8[W]*IrOK,abAt_J%$tBb45TgEPG167yoIucdB+5_gBzNx5#ZK;+J%N@8E=eaKFje.!At:rn]TCEzYL!xSd;e.lNxn*{@8c9l3/1wKf3pW/jtz$y/cFXS7Q0*+@TUU(s2%z1Hs?Au/HB/,D:h./yUD_Bemai=^mQ(RYqB?_p4@7;k18z@Np}{_^T_,Ugov03EOXoxtl+)3dxex=k+u!^d5%ZN#?/z8QtBybE7%f#A[l=wX.S^HSJH;rt!ImYb+*FU}!(FGKNGY[s@:NEtPu1m=+}XPq*UW_rdUtE=wyai-Bw!;xN/v2(n#hH1se-^UYN%R.HUEK+QTju7%{8yo[G@Y}8Z}(;8aTr4xvetE))YXaRpRR_YlUlGT^-YDuUZ.-xK^iTf*BC)W{hbQnzhq)9ZOoKoamrtO/^{G1f,p,]aCMK-51JvcT@-4=6]*UrbUC?)oyXt-k,DPne@pC*9yYjRG)/?sL$50YJCj[AiAEB:,zP#?)mymAwwd**slO[/nADh=8Ar8va^hc(Bq!)Ymg0{rrtGtbv[VA(2t#)nlhcQMiRY7C?]M:p,bR=;0BsWRW1}hJBaj2D4:[t=hZoHubr.g9i4UqaT2G;CUN#ex,F;?xR:.(W7}G_:Q?KLYuhOXS:qx%yWs6=7rJ?mtz}bli4{Ge$:_NAuw9e)4y+UI#IE6Jall3kISDH;QC9CBCQ3%tb;!/enYbeS*Br[ynC-UZ4pd3WtM{RN)DL3Yf@k@8Mm6!{z3b*6U23P6NX@XC#$Ygz+P*8jJ;dG+L4oaljZfdt[tIo;B{$z5b+mUQE.yp:uGOqoPx6o;O-^$or]Ec3UR+o1w*@;7Sl[N.bZu_:bfg1wYhyQ9:v)TJD^F/Xb0w;4mfNMTA;BLJau7;qEl7Z]R$(yRE)w8?+-k9o:KG2Ume#5xAT^,sv!w+O6l8+=a(y)7XeVu^nM5jshuJeA)N/_9q.[[h2w{ONlp;GImxaew$K{@kY!S1JUUft:I@qa{ac3f;VBN2mmM+2).UTnIO$hB,(h.M2k0JTO6=.V9o2E%A.7)p(8OS2614X7dGKv:8z=1T+dfy5QN)au.v,Z_}a?CeEF51%lPo(c3!^4cn8RXl(:r2nm-H:3wkH5X,[{hk+Vvj4Zfph5frBm[M8@)u82M_LOtd7!@eg]bm6Wx?NM5h?=)AaeZ=Y5Mp?gPe]w6isIgO:kZYv^NLE_mZ}[aEhp!=Zgg6#zS5:H^C*6/;Q^KeDJv8JSN0(0d;U@EJC-LutXuXmW]zga;dks$@dZ$/)wa_KvjigW3]Ym]9e%$aITeC]-cmlLdwIO9,[v]ob7Xf@ZmFOkit36H#;y+^cHr!9i]wIn%]?6BqZ}B,4a(N7veI!KmP?6s9/xUb!;%J99AUQXd+$22Ec%/qs0@UiVRiN@IY@4e6Fp9xTS;epWx%w?x3uSKw#Ahf#az:NA/v3vW6EXS#2gs:R.w=t;0GKnm]oXs?e3Q0=6Iebvsj9z_5{V-1*%yS:*JGmNjCmG0nCgl%9rk@wDw):]nln2$21gYE.z6hGp*-/S?Djyysvn,r@8wQZ:8:UyETC-;ZYn$%0iU0s9k23ShBQ.qMyR.^I4Zl@Vnb9UGvM3+mu2fH[{mqV0Z2T?*/),1@TpHeRiyFQ_eLunU#Dwjc,Qh-.lnj0=VWk79FO){s?bV#e#-R5X1Z.1OaDemFtkN1+d7[GuNEV[jbmNDG!9F}3yH}o_bUR$+cufpgiR7OibNDuu]xfXject%]PT6yQ8^dVu(?B1F#fn}Qkz2kR0/=G9r=any7]$+=*jylYbJJfWoy}7:}cN[*3/:wU0o@AMe:No;?GY+Sq+X4*IiL;55E/iz.xMb]:*Nr6k4)IznIxASALr(rUmi.?OCkKrmU(c{B_CKeS%aD$PZ#0Xi.-(taZa3nm+5fS=aRbi@8AkEElrbx:EP2DIVBsDHapEUlQ1KdiJp)#;+$rEJ(C:/g]AO=jFTkiB/m4Kea=T;)sb0KvEsdkwMzdTRkKd1ifQ^GXFY9!ko0Ew];hXbiq}W?zf#khBP*yt+fl_$#ZgAWB.L%,+)z=G!u3xn9eQTuj.LxH^@6MbpdZ7p6T73X$-4*As7bsjX^H5Z(O5W6H@gpY%=!nVVxm@c@H_tF)y)]ovDl48RiPcC;!}[B1)sAVa/Me$0S,f7-:yjN,cvH^0[T]sV1^ghl.%I)@CeXzLGuMvFtVXfInVBWb]h9hR:8pzhvLV]pG)G}@uq0+17aFrRnmk*,JbCNZDX,j%P%bw#fB5IdP{Q+SiJ[Gj(wSq}y6}Wn;5hI4FFFaR32R01k}6(N2;E%ZOZ1}bfhb*)2RS:zm:DAO-A(Wn9ItgS0a%;]M.Wu{,M98-gpoW^v/-ye916jlKuJ-_g/:K4KF5%N%](,G]K8i:/U]A!S0,Q8y@W45R?/zi4F,7H6XFFk[z.uc/:nu,]3cNL67%;7CXc8aLI_%?H)EkdHnQ;imiojT0Ab1dbC^zd8MIgxh]0j7d{JRPD)jUY8,Oi?*lk!gs*sn?.uW4Hy)WCTvTx,hb^,*9Yqxp+:uo]o(2A6Gyx;nD^sVwm]@Nxr1Skb%w#4B(C]U;woUWLR^6y=O7P0mJ(xmbl]hyU:bd%zbj?KK?3ELw!7X69WKk;Q;uQ!(6ej?h65PQX,n9ZZ;^E8.QB9g@#2FT^aRx=W1*c*^+Twbo-8jPXXPcZ%o#,6]P5UHO*^QUy4-oCeIym_Nc4}fHszzdpd3U;U2Qr@@(m#]u?$N,VtRw@h)S.4Ro-C[89/r.FQBY_1]c:^zV:Rfdc;IT+H3l#ekZRc)7NnvvuR0.=S[Tg;y_AzJdqG)[EGV)K3FI;*-lap+jt,jT2F1@wA*r?+_pB@@CrxwWa*]I4GHpEV7%r{9{Z=v7ZOGrZ9[Rp56m*UiM4aM}ngp9v/!IE^8+D0Ihy^WHM:k!hY@WgoP!CwY%o/7l;/TAQB]RJaUK7FF_hf@r=@oikkBQPYG-g4(NSNvf+/7JGaiVtmveO/8F$8,4DKCzq[uw*e74F2.J,wt@==aZQJ)haZupznn_t;et]hIV{DU+e7^zkyv-ooT%E)[s]%M2hBkSaKt$=y!*a:g/t1W@k(jYu[QQmF4S4Nm[biLS2keyWpwqB(j!pTz:S#!es)UR?Te,%aAUVKZc$$kVMVq6]e3-kk*a:PznvksXx8}[Nfjk]-Cp1heyrHe]2fI^MKbt#9kn!8[sAM19T/;NC,XJMa/[n,kaqRQ%Eu$u!GAno187Y8[d(oX5i@8JV./^QtXuu^AY0#1gIg/3Eg(B.Ddi9pdOPt4qA[8GMG-mk%JUNr6FSBi8r4k6,/f{oce5xB?NxV1TlKUt^Do3K}J3bM$1^m;.#?yeKSl474(U1VecX33^VkxV6@j8;Q0tyQSzy]Oz[F3r@JmWGa{V-rpq7z+:NY4mg={I7XVRFutasZ[zLM-MfxqI;({foNiQ#EOCO$$s(:)n(S+Brm0X00q6$5ddvP2]%LRxG+r!,8i_571f5:9XeNPZt-{-n_5E?@4?oyl?h)Kd6;[@a+C[o4rMPE?FQRfhZW;I:fA{JI$+J}Fv5fKSB.![kN9s$h;I06jUcH(^,%?CG=;mY^F**0]e+3(3X0jg32BkofPo%60x!}lv!3s6P}h.CNUpc9Et%v*fM06ah*P!O6DrUW_p8kBSF6GE6y!hiQ(f_{F8])MupVW3,X0?*6r:vDHTg-Zb^LEw#GW/-c0pr^vpMeY%+?C;4W(UKR-h@/ZtTPDEI-vA.w698LsFqnL{@b=]U05CofeFLx399]aBvzQRd0%QbSV^w/f!83.8F!aWDUVj,8JtIiT38PvOq%2UCCj:%jyY^cCCkP:hj4KF9meA]rST8]x#EXIXJfkTfh}NFasul3#av7%xW]r7o3v]n)lzbgd+jEA(^)[tm0uZtzuU)EFyhrqej9iW^Pa@:uh%+ZCBES{6eSj9r#ViIrUGG022JhpA0G)ukmmk9m);eR[y8r9oJ?BU0:Cq3afYh9.Z?^MT(a]YA1^h,LL7pE^JDDKzT(7wc4?l84M-MtW7L-h#w:AP!LLZ::XS@Idw?}m[k0x,Fyb?+Gzz?;GWC+;21k2%/.:P-]@{ezRmwJ#d*5dz:Em%la)WHi:bav.Q;1^PH]R*et.5#VS*+N*k-}V/?ekit{t!JcoBie;gZx}UL)sFL7Vj-n%Qw%WI_8@UD1gwLf79vTmd}JKBNrF@Ih!$yHS-y0Dik!h?jJSGPTCT!}?_:+BJ0b5]0!A284ALFmCaaZ_c={#rUBb,Vm-]OQi:{DzG%w_SnnyJ+Ug)oSr]07!o+Q@)Xc3Z2J]y?UpMWr,i5VewVsp@C)8Fh,.VaV[E#[!giWZ8b;:dU,WKq0yeEAy+I}tU6G#@Fauln4Q2:I3O;C[+Cpxlx?ndFZj7i3eWo+!ho12zR8X])_GW$MQaCX!bP+$^AEp]k8Y1T1C3LbWMv2/0baTkz?FTcYC$#%0R*JbG,Kjp{3xLzwmYF!g0+W/),faj-GsSu[KT3=]iUe]RD_rdZc8u{@Q2QV9bI76lpxs!bXR7A5d!mjbiFpn#;_d/GNpze}0hdI4r65qel=6[{D[ImShWj5lCWZoqPXzsh8]?2gCub?s/qrpd%zf)Jzg1!iSw;W#02b:6CnVK]7H,Bo/dEfS863C$V^(qAcynQ^o6%@pE-k,O{=Nd}wb$L+0qx$jAX7=:XGAEZ3-9GU:XGS7?G:{/gJD-Q{Z3!*oN2DE1uM;vxLoxxw{CC-Q#[sHTro9$eJ+plcHcy!:7(AcSlIRWjT)VR[lXbr+{ryi^-gPvpw,/!CR8E+-T.#:N0jWlL0QRj-_Pg%/KVO=*ZMjdo#0cL8sc/,TXu03MSmvez?4!I.J49Sq/?Ptn_8zOHk5q^HYl:z%3I%R8#I)cW^E^6$U%[0A68TuC;737kw@buUL8^lP)Fa:*NEkbApjQ:FMTF6lSk:Pv,=$UJ9a:D62*Vmi(0rR%mg4_N0hqxAty8HpWv8?JY;w)#AP#%Mw*_Tu9@kMNen.fwab:75}C0V._+vk9sn*Xnw?BO3fBs@djp_}MX+h0W%?wWgG?hx8^?7:z38/u4=#j5+)a(dgV=/d5ReO#qQKb/d}BPmhIei$wG?3pY^.v]D1+sb*tOa8iMUxj8ouRcVxS-:#0x,a4JwU6s/,@[Olv-huXh2,/o;P0sDj%?TcsWtIxjd[3ZyoL,e%RdT};_M1eTBeI-%1u%-jN*Ez^JkmD,GbdFj}nxNEo?Q6Pq]#JEu}E;]rr$9JTiW+:kt=p7x#X6M!aVfw{]G(/VD]CCSB6Be=CS:zNB@2cm#/5W(h_1D;@#bKYvayzwB33aGW..9ynqYFuO$iT;wzA9ogfP0$CZoW4wlJ8+/=@0(;I,/S^my^z5JA7mM;E^^mwwn8n#(+iZxSCrlgr:YPT*kz)]D${9qz!Zi.,T)0d,Zf4)n7vNpu]#=u38Tg@tpY#0BMS(G1$H^7UoWh1z1):Ia2$*x^Z4RsSnpbiD@5uDvw_H.;Jtnw,obeY32mBUv:-sB,a5c#=BZG?1]CDMAm,mJ?7%AR0Ojc0=N(dU/ddeV/qqtC6UI}_/O)CnwOO,M!08Y$t!;5!tQ,^}hy#4a;/)Fph,fLL*.90JXdajMxpp-:sGp^LSQ8Jt5vUdsqr(cKfVvNNLB:SHbTWbYs9b0KhX^pK+mAN-@R@*o_5p2qYO;vLy;}:nig5*]W?n-3j]nyUXf)mXRyxila0jH(x%BhG#cm*p4o@WXP)4nDC[Bp*rX3X]yAeuF).GxG00tpep?b7yEigAFVqcssh:J98iG(2=SCqN9]sZV_g(bg:#yeVk=gr[w:rc=Vv*D08AvG?5i=nS*yu2{r{@Io(rB+TM@5sl.M6fIaNXf@za+wcrMrA%3?#!*hQx5_GsiTVLd2ebHy7thN}s%IVdq=q!7RQQagIQs,k=ch9eeux5R-jo%CL3V79u/MG[QubaQ9xBHSv4(.Cs@E-XL_J45fvjMY*j+K]L)x7)xhS48@#ewsZ,-}PUqrZ,5zaW-6{;#yOJ%R]Joo(Is{SeT((MdP7c88CcwWQ_%BL55%Fz*;OhRX,HJ}Y3rP!DRF[XvGBvcEMR(M/ClAb2FP;nxUM3a.ooR%wdT6bGD1=@pQgksUiT6Uo9-Rx0CAQ,SfrGj%4k9EUkhZGY5HD^L!o=si)fF*QBR!v/_#8O4;vb?v_3Im8E-e=}2kd95*g.OjIxhSzFB?O:(*Cb!2Uo4IeX/HncF:1b@F*.SnkNij%7%g)bpkvrhQHh[x:/zl*l92{Lji:1eEFhC3$Q+,+g?:V*/xn3@;WBgW_AxNPx-,toq2yc?Se+S61-hB,.}WWlFraB:fzQ.MVmC!sKhc1%/wIkN0*b7,0(oD5GVv*B!4!w(rolz/C:07ZEpn7,$wB5L.KP51fM{xG1?Amh%T$,0HJh?p,J)qq-QyriSc8VQk3S1yjzBe]U67Tf,#AxX7{xAV2O5*!G{@%,S/4Il1jq[;9.KgCMLEUd+www2?vMZFLgFjTLgt3x4Icjv</table_report.CT>
  </Files>
  <CheatEntries>
    <CheatEntry>
      <ID>777</ID>
      <Description>"&gt;&gt; HoloCure - Save the Fans!"</Description>
      <Options moHideChildren="1"/>
      <Color>0064C8</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end

local const = {}

local function assign_G(tbl, name, val)
    assert(not const[name], name..' is a const.')
    Starter.log("Assign: _G['"..name.."'] = "..tostring(val))
    return rawset(tbl, name, val)
end

local function assign(tbl, name, val)
    Starter.log('Assign: '..tbl.name..'.'..name..' = '..tostring(val))
    return rawset(tbl, name, val)
end

local function createTables(...)
    local luaFile = {...}
    for i = 1, #luaFile do
        local name = luaFile[i]
        local tf = assert(findTableFile(name..'.lua'), name..'.lua not found.')
        local sl = readStringLocal(tf.stream.memory, tf.stream.size)
        local define = assert(load(sl), name..".lua can't be loaded.")
        _G[name], const[name] = nil, define()
        const[name].name = name
        setmetatable(const[name], {__newindex = assign})
    end
    return setmetatable(_G, {__index = const, __newindex = assign_G})
end

local function debugMode(isDebug)
    Register.isRestore, Register.isDebug = not isDebug, isDebug
    _G['isDebug'], Starter.isDebug = nil, isDebug
    local msg = 'Enabled: Debug Mode with CE %s/%s\n'
    return Starter.log(msg:format(getCEVersion(), _VERSION))
end

local function includeLibrary(...)
    if Starter and Register then return end
    createTables(...); debugMode(_G['isDebug'])
    local ver, req = getCEVersion(), 7.2
    local url = "https://cheatengine.org"
    local msg = 'You using Cheat Engine '..ver..'.\nRequired that you use CE '..req..' or later.\nGo to the official site?'
    if (ver &lt; req) then Starter.lanchBrowser(url, msg); return closeCE() end
    MainForm.onClose, Starter.onClose = Starter.recommandInit, MainForm.onClose
    AddressList.onValueChange = Starter.showSelectionList
    Starter.disabledColor,  Starter.enabledColor  = 0x0000C8, 0x0064C8
    Register.disabledColor, Register.enabledColor = 0x808080, 0xD58F00
    unregisterAutoAssemblerCommand('registerlabel')
    registerAutoAssemblerCommand('registerlabel', Register.labelAndSymbol)
    return Starter.log('Ready to CheatTableLibrary.\n')
end

[ENABLE]

includeLibrary('Starter', 'Register', 'Recorder', 'GM')
Starter.onEnable(MainForm, AddressList)
Starter.onLoad(AddressList.getMemoryRecordByID(9))


[DISABLE]

Starter.onDisable(AddressList)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>1</ID>
          <Description>"&lt;scripts&gt;"</Description>
          <Options moHideChildren="1"/>
          <Color>808080</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>20</ID>
              <Description>"CE:"</Description>
              <Options moHideChildren="1"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>2</ID>
                  <Description>"Compact Mode"</Description>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

local function compactMode()
    MainForm.Splitter1.visible = memrec.active
    MainForm.Panel5.visible    = memrec.active
end

[ENABLE]

synchronize(compactMode)

[DISABLE]

synchronize(compactMode)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>3</ID>
                  <Description>"Add Hotkeys Menu"</Description>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

local function assignHotkeysToTable(mr, tbl)
    if not (0 &lt; mr.HotkeyCount) then return end
    for i = 0, mr.HotkeyCount - 1 do
        tbl[#tbl + 1] = {mr.Hotkey[i].hotkeyString, mr.index, mr.description}
    end
end

local function getHotkeysTable()
    local al, tbl = getAddressList(), {}
    for i = 0, al.count - 1 do assignHotkeysToTable(al[i], tbl) end
    return tbl
end

local function viewSetHotkeys()
    local frm = Recorder.createHotkeyList(getHotkeysTable())
    frm.visible = false
    if frm.showModal() then frm.destroy() end
end

local function cleanHotkeys(mr)
    if not (0 &lt; mr.HotkeyCount) then return end
    for i = mr.HotkeyCount - 1, 0, -1 do mr.Hotkey[i].destroy() end
end

local function cleanAllHotkeys()
    local al = getAddressList()
    for i = 0, al.count - 1 do cleanHotkeys(al[i]) end
end

local function findItem(str)
    local mf = getMainForm()
    for i = mf.Menu.Items.count - 1, 0, -1 do
        if (mf.Menu.Items[i].caption == str) then return mf.Menu.Items[i] end
    end
end

local function addMenuToItem(item, str, func)
    local newMenu = createMenuItem(item)
    item.add(newMenu)
    newMenu.caption, newMenu.onClick = str, func
end

local function addHotkeyInfoItem()
    if findItem('&amp;Hotkeys') then return end
    local mf = getMainForm()
    local HotKeyInfoItem = createMenuItem(mf.Menu.Items)
    mf.Menu.Items.add(HotKeyInfoItem)
    HotKeyInfoItem.caption = '&amp;Hotkeys'
    addMenuToItem(HotKeyInfoItem, 'List view', viewSetHotkeys)
    addMenuToItem(HotKeyInfoItem, 'Clean all', cleanAllHotkeys)
end

[ENABLE]

return assert(Recorder, 'Recorder required') and synchronize(addHotkeyInfoItem)

[DISABLE]

findItem('&amp;Hotkeys').destroy()
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>12168</ID>
                  <Description>"Enable Speedhack"</Description>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

[ENABLE]

speedhack_setSpeed(tonumber(inputQuery(memrec.description, "Speed:", "3.0")))

[DISABLE]

speedhack_setSpeed(1.0)
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>21</ID>
              <Description>"CT:"</Description>
              <Options moHideChildren="1"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>5</ID>
                  <Description>"Save Checkbox States"</Description>
                  <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

[ENABLE]

local mainScript = AddressList.getMemoryRecordByID(777)
local loadScript = AddressList.getMemoryRecordByID(9)

Register.loadCheckboxStates(mainScript, loadScript); return 'nop'

[DISABLE]
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>6</ID>
                      <Description>"Notes:"</Description>
                      <Color>808080</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>7</ID>
                          <Description>"If saved, states of the checkbox can be restored when CT is started next time."</Description>
                          <Color>808080</Color>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>8</ID>
                          <Description>"If they are variables, the values are also saved. (supports AllowIncrease/Decrease)"</Description>
                          <Color>808080</Color>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>9</ID>
                  <Description>"Load Checkbox States"</Description>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

[ENABLE]

error(messageDialog('First, Save Checkbox States.', 2, 2))

[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>10</ID>
                  <Description>"Expand All"</Description>
                  <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

local function enableHeader(memrec)
    if (memrec.type == vtAutoAssembler) then return end
    memrec.active = memrec.isAddressGroupHeader or memrec.isGroupHeader
    return memrec.active
end

local function enableHeaders(memrec)
    for i = 0, memrec.count - 1 do
        local mr = memrec[i]
        if enableHeader(mr) and (0 &lt; mr.count) then enableHeaders(mr) end
    end
end

[ENABLE]

enableHeaders(AddressList.getMemoryRecordByID(777)); return 'nop'

[DISABLE]
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>11</ID>
                      <Description>"Note: Enable all headers."</Description>
                      <Color>808080</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>19</ID>
                  <Description>"Check Updates"</Description>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

[ENABLE]

Starter.lanchBrowser("https://fearlessrevolution.com/viewtopic.php?p=310084#p310084")
return "nop"

[DISABLE]
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>11039</ID>
              <Description>"Play:"</Description>
              <Options moHideChildren="1"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>11111</ID>
                  <Description>"Money Multiplier"</Description>
                  <Options moHideChildren="1"/>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

local parent = AddressList["Pointer-&gt;GlobalVariables"]

[ENABLE]

writeDouble("mem0x00+08", 10.0)

local money = Recorder.getChild(parent, "moneyMultiplier")
local timer = createTimer(MainForm)

local function update(timer)
    if not memrec.active then Recorder.writeValue(money, 1); return timer.destroy() end
    Recorder.writeValue(money, 1 * readDouble("mem0x00+08"))
end

timer.onTimer, timer.interval = update, 100

[DISABLE]
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>11112</ID>
                      <Description>"times"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Double</VariableType>
                      <Address>mem0x00+08</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>11108</ID>
                  <Description>"RainBow EXP"</Description>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

local parent = AddressList["Pointer-&gt;GlobalVariables"]

[ENABLE]

local exp   = Recorder.getChild(parent, "rainbowEXPDrop")
local timer = createTimer(MainForm)

local function update(timer)
    if not memrec.active then Recorder.writeValue(exp, 0); return timer.destroy() end
    Recorder.writeValue(exp, 1)
end

timer.onTimer, timer.interval = update, 100

[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>11109</ID>
                  <Description>"Money Drop Chance Buff"</Description>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

local parent = AddressList["Pointer-&gt;GlobalVariables"]

[ENABLE]

local buff  = Recorder.getChild(parent, "moneyDropChanceBuff")
local timer = createTimer(MainForm)

local function update(timer)
    if not memrec.active then Recorder.writeValue(buff, 0); return timer.destroy() end
    Recorder.writeValue(buff, 1)
end

timer.onTimer, timer.interval = update, 100

[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>11110</ID>
                  <Description>"Food Drop Chance Buff"</Description>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

local parent = AddressList["Pointer-&gt;GlobalVariables"]

[ENABLE]

local buff  = Recorder.getChild(parent, "fruitFoodBuff")
local timer = createTimer(MainForm)

local function update(timer)
    if not memrec.active then Recorder.writeValue(buff, 1); return timer.destroy() end
    Recorder.writeValue(buff, 100)
end

timer.onTimer, timer.interval = update, 100

[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>11669</ID>
                  <Description>"Weapon Strength Upgrade Buff"</Description>
                  <Options moHideChildren="1"/>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

local parent = AddressList["Pointer-&gt;GlobalVariables"]

[ENABLE]

writeDouble("mem0x00+10", 10.0)

local buff  = Recorder.getChild(parent, "enhancementBuff")
local timer = createTimer(MainForm)

local function update(timer)
    if not memrec.active then Recorder.writeValue(buff, 0); return timer.destroy() end
    Recorder.writeValue(buff, readDouble("mem0x00+10"))
end

timer.onTimer, timer.interval = update, 100

[DISABLE]
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>12446</ID>
                      <Description>"strength"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Double</VariableType>
                      <Address>mem0x00+10</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>11555</ID>
                  <Description>"Ignore Enhance Costs"</Description>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

local parent = AddressList["Pointer-&gt;GlobalVariables"]

[ENABLE]

local cost  = Recorder.getChild(parent, "enhanceCostMultiplier")
local timer = createTimer(MainForm)

local function update(timer)
    if not memrec.active then Recorder.writeValue(cost, 1); return timer.destroy() end
    Recorder.writeValue(cost, 0)
end

timer.onTimer, timer.interval = update, 100

[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>11113</ID>
                  <Description>"Infinite Reroll"</Description>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

local parent = AddressList["Pointer-&gt;GlobalVariables"]

[ENABLE]

local reroll = Recorder.getChild(parent, "rerollTimes")
local timer  = createTimer(MainForm)

local function update(timer)
    if not memrec.active then return timer.destroy() end
    Recorder.writeValue(reroll, 10)
end

timer.onTimer, timer.interval = update, 100

[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>11181</ID>
                  <Description>"Infinite Eliminate"</Description>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

local parent = AddressList["Pointer-&gt;GlobalVariables"]

[ENABLE]

local elimi = Recorder.getChild(parent, "eliminateTimes")
local timer = createTimer(MainForm)

local function update(timer)
    if not memrec.active then return timer.destroy() end
    Recorder.writeValue(elimi, 10)
end

timer.onTimer, timer.interval = update, 100

[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>12330</ID>
                  <Description>"Already Have Golden Hammer"</Description>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

local parent = AddressList["Pointer-&gt;GlobalVariables"]

[ENABLE]

local gh  = Recorder.getChild(parent, "goldenHammer")
local ghp = Recorder.getChild(parent, "goldenHammerPieces")

local timer = createTimer(MainForm)

local function update(timer)
    if not memrec.active then return timer.destroy() end
    Recorder.writeValue(gh, 1); Recorder.writeValue(ghp, 3)
end

timer.onTimer, timer.interval = update, 100

[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>12492</ID>
                  <Description>"Freeze Time"</Description>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

local parent = AddressList["Pointer-&gt;GlobalVariables"]

[ENABLE]

local reroll = Recorder.getChild(parent, "timePause")
local timer  = createTimer(MainForm)

local function update(timer)
    if not memrec.active then Recorder.writeValue(reroll, 0); return timer.destroy() end
    Recorder.writeValue(reroll, 1)
end

timer.onTimer, timer.interval = update, 100

[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>11147</ID>
                  <Description>"Damage Multiplier (warning: also affects enemies)"</Description>
                  <Options moHideChildren="1"/>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

local parent = AddressList["Pointer-&gt;GlobalVariables"]

[ENABLE]

writeDouble("mem0x00", 2.0)

local damage = Recorder.getChild(parent, "damage")
local timer  = createTimer(MainForm)

local function update(timer)
    if not memrec.active then Recorder.writeValue(damage, 10.0); return timer.destroy() end
    Recorder.writeValue(damage, 10 * readDouble("mem0x00"))
end

timer.onTimer, timer.interval = update, 100

[DISABLE]
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>11215</ID>
                      <Description>"times"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Double</VariableType>
                      <Address>mem0x00</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>11753</ID>
              <Description>"Holo House:"</Description>
              <Options moHideChildren="1"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>11754</ID>
                  <Description>"Auto Fish Catching"</Description>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

local parent = AddressList["Pointer-&gt;FishingMiniGame"]

[ENABLE]

local timer = createTimer(MainForm)

local function update(timer)
    if not memrec.active then return timer.destroy() end
    local gauge = Recorder.getChild(parent, "fishGauge")
    if not (Recorder.getAddress(parent, true) and gauge) then return end
    Recorder.writeValue(gauge, 100)
end

timer.onTimer, timer.interval = update, 100

[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>11870</ID>
                  <Description>"No Watering Cooldown"</Description>
                  <Options moHideChildren="1"/>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

local parent = AddressList["Pointer-&gt;FarmingSpot"]

[ENABLE]

local timer = createTimer(MainForm)

local function update(timer)
    if not memrec.active then return timer.destroy() end
    local water = Recorder.getChild(parent, "waterCD")
    if not (Recorder.getAddress(parent, true) and water) then return end
    Recorder.writeValue(water, 0)
end

timer.onTimer, timer.interval = update, 100

[DISABLE]
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>11982</ID>
                      <Description>"Note: Only affects the top left plant."</Description>
                      <Color>808080</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>11036</ID>
          <Description>"&lt;pointers&gt;"</Description>
          <Options moHideChildren="1"/>
          <Color>808080</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>10002</ID>
              <Description>"Pointer-&gt;GlobalVariables"</Description>
              <Options moHideChildren="1"/>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008080</Color>
              <GroupHeader>1</GroupHeader>
              <Address>gml_GlobalVariables</Address>
              <Offsets>
                <Offset>0</Offset>
                <Offset>10</Offset>
                <Offset>48</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>12732</ID>
                  <Description>"version"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>String</VariableType>
                  <Length>64</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>+GM.Object.Dict['Globals'].Variables['version']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                    <Offset>0</Offset>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12733</ID>
                  <Description>"PLAYERLEVEL"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['PLAYERLEVEL']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12734</ID>
                  <Description>"showHUDHP"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['showHUDHP']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12735</ID>
                  <Description>"showHPVal"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['showHPVal']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12736</ID>
                  <Description>"aboveHP"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['aboveHP']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12737</ID>
                  <Description>"maxHP"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['maxHP']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12738</ID>
                  <Description>"currentHP"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['currentHP']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12739</ID>
                  <Description>"experience"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['experience']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12740</ID>
                  <Description>"rainbowEXPDrop"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['rainbowEXPDrop']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12741</ID>
                  <Description>"goldAnvilCanDrop"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['goldAnvilCanDrop']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12742</ID>
                  <Description>"moneyDropChanceBuff"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['moneyDropChanceBuff']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12743</ID>
                  <Description>"fruitFoodBuff"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['fruitFoodBuff']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12744</ID>
                  <Description>"anvilDropChanceBuff"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['anvilDropChanceBuff']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12745</ID>
                  <Description>"enhancementBuff"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['enhancementBuff']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12746</ID>
                  <Description>"moneyMultiplier"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['moneyMultiplier']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12747</ID>
                  <Description>"enhanceCostMultiplier"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['enhanceCostMultiplier']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12748</ID>
                  <Description>"freeAnvil"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['freeAnvil']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12749</ID>
                  <Description>"stageCoinBonus"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['stageCoinBonus']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12750</ID>
                  <Description>"currentRunMoneyGained"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['currentRunMoneyGained']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12751</ID>
                  <Description>"moneyHeal"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['moneyHeal']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12752</ID>
                  <Description>"coinAutoPick"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['coinAutoPick']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12753</ID>
                  <Description>"basedamage"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['basedamage']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12754</ID>
                  <Description>"damage"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['damage']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12755</ID>
                  <Description>"enemyDefeated"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['enemyDefeated']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12756</ID>
                  <Description>"burgersEaten"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['burgersEaten']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12757</ID>
                  <Description>"showDamageText"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['showDamageText']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12758</ID>
                  <Description>"reducedSpawn"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['reducedSpawn']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12759</ID>
                  <Description>"gamepadSpeedMultiplier"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['gamepadSpeedMultiplier']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12760</ID>
                  <Description>"rerollTimes"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['rerollTimes']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12761</ID>
                  <Description>"eliminateTimes"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['eliminateTimes']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12762</ID>
                  <Description>"StatusEffects"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['StatusEffects']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12763</ID>
                  <Description>"goldenHammer"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['goldenHammer']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12764</ID>
                  <Description>"goldenHammerPieces"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['goldenHammerPieces']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12765</ID>
                  <Description>"haluLevel"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['haluLevel']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12766</ID>
                  <Description>"haluBuff"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['haluBuff']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12767</ID>
                  <Description>"preHaluDefeated"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['preHaluDefeated']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12768</ID>
                  <Description>"timeModeRateScale"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['timeModeRateScale']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12769</ID>
                  <Description>"timeModeSpawnScale"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['timeModeSpawnScale']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12770</ID>
                  <Description>"timePause"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['timePause']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12771</ID>
                  <Description>"timesDodged"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['timesDodged']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12772</ID>
                  <Description>"fullscreen"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['fullscreen']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12773</ID>
                  <Description>"screen_resolution_x"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['screen_resolution_x']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12774</ID>
                  <Description>"screen_resolution_y"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['screen_resolution_y']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12775</ID>
                  <Description>"width_gui"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['width_gui']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12776</ID>
                  <Description>"timeModeRateScale"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['timeModeRateScale']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12777</ID>
                  <Description>"bgmPlay"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['Globals'].Variables['bgmPlay']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>4057</ID>
              <Description>"Pointer-&gt;PlayerManager"</Description>
              <Options moHideChildren="1"/>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008080</Color>
              <GroupHeader>1</GroupHeader>
              <Address>GM.Object.Dict['obj_PlayerManager'].Instance[1]+GM.Object.VarArray</Address>
              <Offsets>
                <Offset>0</Offset>
                <Offset>10</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>4061</ID>
                  <Description>"charName"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>String</VariableType>
                  <Length>32</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['charName']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                    <Offset>0</Offset>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12282</ID>
                  <Description>"P-&gt;playerStatUps"</Description>
                  <Options moHideChildren="1"/>
                  <ShowAsSigned>0</ShowAsSigned>
                  <Color>008080</Color>
                  <GroupHeader>1</GroupHeader>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['playerStatUps']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                    <Offset>10</Offset>
                    <Offset>48</Offset>
                    <Offset>0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>12286</ID>
                      <Description>"pickup+"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Double</VariableType>
                      <Address>+00</Address>
                      <Offsets>
                        <Offset>0</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>12283</ID>
                      <Description>"crt+"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Double</VariableType>
                      <Address>+40</Address>
                      <Offsets>
                        <Offset>0</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>12284</ID>
                      <Description>"hp+"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Double</VariableType>
                      <Address>+50</Address>
                      <Offsets>
                        <Offset>0</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>12285</ID>
                      <Description>"spd+"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Double</VariableType>
                      <Address>+90</Address>
                      <Offsets>
                        <Offset>0</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>12287</ID>
                      <Description>"atk+"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Double</VariableType>
                      <Address>+C0</Address>
                      <Offsets>
                        <Offset>0</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>12288</ID>
                      <Description>"haste+"</Description>
                      <ShowAsSigned>0</ShowAsSigned>
                      <VariableType>Double</VariableType>
                      <Address>+F0</Address>
                      <Offsets>
                        <Offset>0</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>12778</ID>
                  <Description>"canControl"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['canControl']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12779</ID>
                  <Description>"boxCoinGain"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['boxCoinGain']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12780</ID>
                  <Description>"gotGoldenAnvil"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['gotGoldenAnvil']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12781</ID>
                  <Description>"enhanceDone"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['enhanceDone']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12782</ID>
                  <Description>"gameWon"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['gameWon']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12783</ID>
                  <Description>"hardcoreGamerFlag"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['hardcoreGamerFlag']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12784</ID>
                  <Description>"lvlrate1"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['lvlrate1']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12785</ID>
                  <Description>"charPortrait"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['charPortrait']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12786</ID>
                  <Description>"playerDamageTaken"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['playerDamageTaken']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12787</ID>
                  <Description>"boxCoinRate"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['boxCoinRate']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12788</ID>
                  <Description>"winBonus"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['winBonus']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12789</ID>
                  <Description>"charWeapon"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['charWeapon']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12790</ID>
                  <Description>"lvlexponent"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['lvlexponent']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12791</ID>
                  <Description>"charSpecial"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['charSpecial']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12792</ID>
                  <Description>"specialCD"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['specialCD']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12793</ID>
                  <Description>"PERKS"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['PERKS']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12794</ID>
                  <Description>"gotAnvil"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['gotAnvil']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12795</ID>
                  <Description>"perksMenu"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['perksMenu']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12796</ID>
                  <Description>"collabing"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['collabing']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12797</ID>
                  <Description>"currentBoxItem"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['currentBoxItem']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12798</ID>
                  <Description>"collabsMenu"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['collabsMenu']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12799</ID>
                  <Description>"haluBonusCoins"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['haluBonusCoins']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12800</ID>
                  <Description>"dontNeedFlag"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['dontNeedFlag']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12801</ID>
                  <Description>"eliminatedThisLevel"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['eliminatedThisLevel']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12802</ID>
                  <Description>"itemLimit"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['itemLimit']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12803</ID>
                  <Description>"gameOvered"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['gameOvered']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12804</ID>
                  <Description>"stickerActionSelected"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['stickerActionSelected']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12805</ID>
                  <Description>"ITEMS"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['ITEMS']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12806</ID>
                  <Description>"eliminateMode"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['eliminateMode']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12807</ID>
                  <Description>"paused"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['paused']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12808</ID>
                  <Description>"reviving"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['reviving']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12809</ID>
                  <Description>"holdLevel"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['holdLevel']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12810</ID>
                  <Description>"superLit"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['superLit']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12811</ID>
                  <Description>"darkening"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['darkening']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12812</ID>
                  <Description>"goldenOptionSelected"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['goldenOptionSelected']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12813</ID>
                  <Description>"hurtTime"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['hurtTime']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12814</ID>
                  <Description>"collabsStartingIndex"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['collabsStartingIndex']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12815</ID>
                  <Description>"collabCount"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['collabCount']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12816</ID>
                  <Description>"anvilID"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['anvilID']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12817</ID>
                  <Description>"stickerID"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['stickerID']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12818</ID>
                  <Description>"couchPotatoFlag"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['couchPotatoFlag']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12819</ID>
                  <Description>"leveled"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['leveled']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12820</ID>
                  <Description>"upgradeActionSelected"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['upgradeActionSelected']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12821</ID>
                  <Description>"paused_screen_sprite"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['paused_screen_sprite']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12822</ID>
                  <Description>"STICKERS"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['STICKERS']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12823</ID>
                  <Description>"levelOptionSelect"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['levelOptionSelect']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12824</ID>
                  <Description>"stickerLineTime"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['stickerLineTime']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12825</ID>
                  <Description>"itemBoxTakeOption"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['itemBoxTakeOption']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12826</ID>
                  <Description>"boxCoinTime"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['boxCoinTime']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12827</ID>
                  <Description>"stickerAction"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['stickerAction']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12828</ID>
                  <Description>"boxBounceTime"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['boxBounceTime']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12829</ID>
                  <Description>"pauseOption"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['pauseOption']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12830</ID>
                  <Description>"usedSticker"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['usedSticker']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12831</ID>
                  <Description>"gotSticker"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['gotSticker']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12832</ID>
                  <Description>"dankTime"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['dankTime']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12833</ID>
                  <Description>"controlsFree"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['controlsFree']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12834</ID>
                  <Description>"numberOfMaxedWeapons"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['numberOfMaxedWeapons']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12835</ID>
                  <Description>"boxOpenned"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['boxOpenned']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12836</ID>
                  <Description>"boxItemAmount"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['boxItemAmount']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12837</ID>
                  <Description>"numberOfOwnedItems"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['numberOfOwnedItems']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12838</ID>
                  <Description>"trueRNGcounter"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['trueRNGcounter']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12839</ID>
                  <Description>"boxOpenTime"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['boxOpenTime']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12840</ID>
                  <Description>"enhancingTime"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['enhancingTime']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12841</ID>
                  <Description>"weaponLimit"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['weaponLimit']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12842</ID>
                  <Description>"collabDone"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['collabDone']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12843</ID>
                  <Description>"gotBox"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['gotBox']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12844</ID>
                  <Description>"canSpecial"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['canSpecial']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12845</ID>
                  <Description>"collabingTime"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['collabingTime']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12846</ID>
                  <Description>"goldenAnvilOptionSelected2"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['goldenAnvilOptionSelected2']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12847</ID>
                  <Description>"stickerPauseMenu"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['stickerPauseMenu']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12848</ID>
                  <Description>"specialColorTime"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['specialColorTime']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12849</ID>
                  <Description>"enhanceResult"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['enhanceResult']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12850</ID>
                  <Description>"gameDone"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['gameDone']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>12851</ID>
                  <Description>"specialIconPulseTime"</Description>
                  <VariableType>Double</VariableType>
                  <Address>+GM.Object.Dict['obj_PlayerManager'].Variables['specialIconPulseTime']</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>11710</ID>
              <Description>"Pointer-&gt;FishingMiniGame"</Description>
              <Options moHideChildren="1"/>
              <Color>008080</Color>
              <GroupHeader>1</GroupHeader>
              <Address>GM.Object.Dict['obj_FishingMiniGame'].Instance[1]+GM.Object.VarArray</Address>
              <Offsets>
                <Offset>0</Offset>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>11757</ID>
              <Description>"Pointer-&gt;FarmingSpot"</Description>
              <Options moHideChildren="1"/>
              <Color>008080</Color>
              <GroupHeader>1</GroupHeader>
              <Address>GM.Object.Dict['obj_FarmingSpot'].Instance[1]+GM.Object.VarArray</Address>
              <Offsets>
                <Offset>0</Offset>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>11441</ID>
          <Description>"&lt;addresses&gt;"</Description>
          <Options moHideChildren="1"/>
          <Color>808080</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>11755</ID>
              <Description>"CScriptList"</Description>
              <Color>008080</Color>
              <GroupHeader>1</GroupHeader>
              <Address>7FF76106C628</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>11332</ID>
              <Description>"ObjectArray"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008080</Color>
              <GroupHeader>1</GroupHeader>
              <Address>7FF760E57870</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>11331</ID>
              <Description>"GlobalVariables"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008080</Color>
              <GroupHeader>1</GroupHeader>
              <Address>7FF760E4EBE8</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>11330</ID>
              <Description>"StringsList"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>008080</Color>
              <GroupHeader>1</GroupHeader>
              <Address>7FF760CD87E0</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"&lt;settings&gt;"</Description>
          <Options moHideChildren="1"/>
          <Color>808080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
if syntaxcheck then return end

[ENABLE]

local msg = 'Contains the required table settings.\nDo you want to expand %s?'
return (messageDialog(msg:format(memrec.description), 3, 0, 1) == 6) or 'nop'

[DISABLE]
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>10000</ID>
              <Description>"HoloCure - Save the Fans!"</Description>
              <Color>D58F00</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
if syntaxcheck then return end

local tbl = Register.createSectionTable('$process')
local start, size = Register.getSectionRegion(tbl)

local GML = {
    ["Required.GM"] = {
        {'oc_CScriptList',     "48xxxxxxxxxxxx48xxxx48xxxxxxC333xxC3xxxx81",           1, start, size},
        {'oc_ObjectArray',     "4Cxxxxxxxxxxxx45xxxx49xxxx4C",                         1, start, size},
        {'oc_GlobalVariables', "48xxxxxxxxxxxxE8xxxxxxxx904Cxxxxxxxxxxxx41xxxxxxxx76", 1, start, size},
        {'oc_StringsList',     GM.Sig.StringsList,                                     1, start, size}
    }
}

local DhaosCollider = {
    ["Required.GM.getGlobalVariables"] = {
        {'oc_GlobalVariables'},
        {'oc_StringsList'}
    },
    ["Required.GM.getObjectVariables"] = {
        {'oc_ObjectArray'},
        {'oc_StringsList'}
    },
    ["Required.GM.createGlobalChildren"] = {
        {'oc_GlobalVariables'},
        {'oc_StringsList'}
    },
    ["Required.GM.createPlayerChildren"] = {
        {'oc_ObjectArray'},
        {'oc_StringsList'}
    },
    ["Required.GM.createFishChildren"] = {
        {'oc_ObjectArray'},
        {'oc_StringsList'}
    },
    ["Required.GM.createFarmChildren"] = {
        {'oc_ObjectArray'},
        {'oc_StringsList'}
    },
    ["Required.GM.getStatUpsOffsets"] = {
        {'oc_ObjectArray'},
        {'oc_StringsList'}
    },
    [11111] = { -- Money Multiplier
        {'oc_GlobalVariables'},
        {'oc_StringsList'}
    },
    [11108] = { -- RainBow EXP
        {'oc_GlobalVariables'},
        {'oc_StringsList'}
    },
    [11109] = { -- Money Drop Chance Buff
        {'oc_GlobalVariables'},
        {'oc_StringsList'}
    },
    [11110] = { -- Food Drop Chance Buff
        {'oc_GlobalVariables'},
        {'oc_StringsList'}
    },
    [11669] = { -- Weapon Strength Upgrade Buff
        {'oc_GlobalVariables'},
        {'oc_StringsList'}
    },
    [11555] = { -- Ignore Enhance Costs
        {'oc_GlobalVariables'},
        {'oc_StringsList'}
    },
    [11113] = { -- Infinite Reroll
        {'oc_GlobalVariables'},
        {'oc_StringsList'}
    },
    [11181] = { -- Infinite Eliminate
        {'oc_GlobalVariables'},
        {'oc_StringsList'}
    },
    [12330] = { -- Already Have Golden Hammer
        {'oc_GlobalVariables'},
        {'oc_StringsList'}
    },
    [12492] = { -- Freeze Time
        {'oc_GlobalVariables'},
        {'oc_StringsList'}
    },
    [11147] = { -- Damage Multiplier (warning: Also affects enemies)
        {'oc_GlobalVariables'},
        {'oc_StringsList'}
    },
    [11754] = { -- Auto Fish Catching
        {'oc_ObjectArray'},
        {'oc_StringsList'}
    },
    [11870] = { -- No Watering Cooldown
        {'oc_ObjectArray'},
        {'oc_StringsList'}
    },
}

local mr = {
    AddressList["Required.allocation"],
    AddressList["Required.GM"],
    AddressList["Required.GM.getGlobalVariables"],
    AddressList["Required.GM.getObjectVariables"],
    AddressList["Required.GM.createGlobalChildren"],
    AddressList["Required.GM.createPlayerChildren"],
    AddressList["Required.GM.createFishChildren"],
    AddressList["Required.GM.createFarmChildren"],
    AddressList["Required.GM.getStatUpsOffsets"],
}

[ENABLE]

waitForSections()
Register.log(tbl[1].Name..' section MD5: '..md5memory(start, size))
Register.allocateNearThisAddress = assert(start)
Register.onEnable(GML, DhaosCollider)
Register.enableMemoryRecords(mr)
AddressList.getMemoryRecordByID(1).active  = true
AddressList.getMemoryRecordByID(20).active = true
AddressList.getMemoryRecordByID(21).active = true
memrec.color = Register.enabledColor

[DISABLE]

Register.disableMemoryRecords(Register.addEnableList(mr))
Register.onDisable(GML, DhaosCollider)
memrec.color = Register.disabledColor
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>14</ID>
                  <Description>"Required.allocation"</Description>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then memrec.color = Register.enabledColor end
{$asm}
registersymbol(mem0x00) // [+00] Damage Multiplier, [+08] Money Multiplier [+10] Weapon Strength Upgrade Buff
registersymbol(mem0x01) //
registersymbol(mem0x02) //
registersymbol(mem0x03) //
registersymbol(mem0x04) //
registersymbol(mem0x05) //
registersymbol(mem0x06) //
registersymbol(mem0x07) //
registersymbol(mem0x08) //
registersymbol(mem0x09) //
registersymbol(mem0x0A) //
registersymbol(mem0x0B) //
registersymbol(mem0x0C) //
registersymbol(mem0x0D) //
registersymbol(mem0x0E) //
registersymbol(mem0x0F) //
// 4k
alloc(mem0x00,0x100,$Register.allocateNearThisAddress)
alloc(mem0x01,0x100)
alloc(mem0x02,0x100)
alloc(mem0x03,0x100)
alloc(mem0x04,0x100)
alloc(mem0x05,0x100)
alloc(mem0x06,0x100)
alloc(mem0x07,0x100)
alloc(mem0x08,0x100)
alloc(mem0x09,0x100)
alloc(mem0x0A,0x100)
alloc(mem0x0B,0x100)
alloc(mem0x0C,0x100)
alloc(mem0x0D,0x100)
alloc(mem0x0E,0x100)
alloc(mem0x0F,0x100)
/*
registersymbol(mem0x10) //
registersymbol(mem0x11) //
registersymbol(mem0x12) //
registersymbol(mem0x13) //
registersymbol(mem0x14) //
registersymbol(mem0x15) //
registersymbol(mem0x16) //
registersymbol(mem0x17) //
registersymbol(mem0x18) //
registersymbol(mem0x19) //
registersymbol(mem0x1A) //
registersymbol(mem0x1B) //
registersymbol(mem0x1C) //
registersymbol(mem0x1D) //
registersymbol(mem0x1E) //
registersymbol(mem0x1F) //
// 8k
alloc(mem0x10,0x100)
alloc(mem0x11,0x100)
alloc(mem0x12,0x100)
alloc(mem0x13,0x100)
alloc(mem0x14,0x100)
alloc(mem0x15,0x100)
alloc(mem0x16,0x100)
alloc(mem0x17,0x100)
alloc(mem0x18,0x100)
alloc(mem0x19,0x100)
alloc(mem0x1A,0x100)
alloc(mem0x1B,0x100)
alloc(mem0x1C,0x100)
alloc(mem0x1D,0x100)
alloc(mem0x1E,0x100)
alloc(mem0x1F,0x100)
*/
[DISABLE]
{$lua}
if not syntaxcheck then memrec.color = Register.disabledColor end
{$asm}
unregistersymbol(*)
dealloc(*)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>15</ID>
                  <Description>"Required.GM"</Description>
                  <Options moHideChildren="1"/>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

local global = AddressList["Pointer-&gt;GlobalVariables"]

local mr = {
    AddressList["CScriptList"],
    AddressList["ObjectArray"],
    AddressList["GlobalVariables"],
    AddressList["StringsList"]
}

local symbol = {
    Register.symbol("gml_CScriptList",     Recorder.getStaticAddress("oc_CScriptList+03")),
    Register.symbol("gml_ObjectArray",     Recorder.getStaticAddress("oc_ObjectArray+03")),
    Register.symbol("gml_GlobalVariables", Recorder.getStaticAddress("oc_GlobalVariables+03")),
    Register.symbol("gml_StringsList",     Recorder.getStaticAddress("oc_StringsList+03"))
}

[ENABLE]

for i = 1, #mr do
    local addr = ("%X"):format(getAddressSafe(symbol[i]) or 0)
    Recorder.writeAddress(mr[i], addr)
end

GM.onEnable(Starter.isDebug)

[DISABLE]

GM.onDisable()

for i = 1, #mr do mr[i].address = nil end

--[[
{
// ORIGINAL CODE - INJECTION POINT: oc_CScriptList

HoloCure.exe.text+223103B: 48 8B 05 16 8F 12 01     - mov rax,[gml_CScriptList]
HoloCure.exe.text+2231042: 48 83 3C 03 00           - cmp qword ptr [rbx+rax],00
HoloCure.exe.text+2231047: 74 31                    - je HoloCure.exe.text+223107A
HoloCure.exe.text+2231049: 48 8B 05 F0 8E 12 01     - mov rax,[HoloCure.exe+335AF40]
HoloCure.exe.text+2231050: 48 8D 0D 51 1E 5F 00     - lea rcx,[HoloCure.exe.rdata+59EA8]
HoloCure.exe.text+2231057: 41 B8 0B 00 00 00        - mov r8d,0000000B
HoloCure.exe.text+223105D: 48 8B 1C 03              - mov rbx,[rbx+rax]
HoloCure.exe.text+2231061: 48 8B D3                 - mov rdx,rbx
HoloCure.exe.text+2231064: E8 37 A0 1F 00           - call HoloCure.exe.text+242B0A0
HoloCure.exe.text+2231069: 85 C0                    - test eax,eax
HoloCure.exe.text+223106B: 75 04                    - jne HoloCure.exe.text+2231071
HoloCure.exe.text+223106D: 48 83 C3 0B              - add rbx,0B
HoloCure.exe.text+2231071: 48 8B C3                 - mov rax,rbx
HoloCure.exe.text+2231074: 48 83 C4 20              - add rsp,20
HoloCure.exe.text+2231078: 5B                       - pop rbx
HoloCure.exe.text+2231079: C3                       - ret
HoloCure.exe.text+223107A: 48 8D 05 9F 9E 66 00     - lea rax,[HoloCure.exe.rdata+D1F20]
HoloCure.exe.text+2231081: 48 83 C4 20              - add rsp,20
HoloCure.exe.text+2231085: 5B                       - pop rbx
HoloCure.exe.text+2231086: C3                       - ret
HoloCure.exe.text+2231087: CC                       - int 3
HoloCure.exe.text+2231088: CC                       - int 3
HoloCure.exe.text+2231089: CC                       - int 3
HoloCure.exe.text+223108A: CC                       - int 3
HoloCure.exe.text+223108B: CC                       - int 3
HoloCure.exe.text+223108C: CC                       - int 3
HoloCure.exe.text+223108D: CC                       - int 3
HoloCure.exe.text+223108E: CC                       - int 3
HoloCure.exe.text+223108F: CC                       - int 3
HoloCure.exe.text+2231090: 48 83 EC 28              - sub rsp,28
// ---------- INJECTING HERE ----------
oc_CScriptList: 48 83 3D BC 8E 12 01 00  - cmp qword ptr [gml_CScriptList],00
// ---------- DONE INJECTING  ----------
HoloCure.exe.text+223109C: 0F 84 C6 00 00 00        - je HoloCure.exe.text+2231168
HoloCure.exe.text+22310A2: 48 8B 0D 77 5C D9 00     - mov rcx,[HoloCure.exe.data+D20]
HoloCure.exe.text+22310A9: 48 8D 15 18 78 67 00     - lea rdx,[HoloCure.exe.rdata+DF8C8] (Script_Init called with Script_Main_number %d)
HoloCure.exe.text+22310B0: 44 8B 05 91 8E 12 01     - mov r8d,[HoloCure.exe+335AF48]
HoloCure.exe.text+22310B7: 48 89 74 24 38           - mov [rsp+38],rsi
HoloCure.exe.text+22310BC: 48 89 7C 24 20           - mov [rsp+20],rdi
HoloCure.exe.text+22310C1: 48 8B 01                 - mov rax,[rcx]
HoloCure.exe.text+22310C4: FF 50 10                 - call qword ptr [rax+10]
HoloCure.exe.text+22310C7: 33 F6                    - xor esi,esi
HoloCure.exe.text+22310C9: 83 3D 78 8E 12 01 01     - cmp dword ptr [HoloCure.exe+335AF48],01
HoloCure.exe.text+22310D0: 8B FE                    - mov edi,esi
HoloCure.exe.text+22310D2: 78 58                    - js HoloCure.exe.text+223112C
HoloCure.exe.text+22310D4: 48 89 5C 24 30           - mov [rsp+30],rbx
HoloCure.exe.text+22310D9: 8B DE                    - mov ebx,esi
HoloCure.exe.text+22310DB: 0F 1F 44 00 00           - nop dword ptr [rax+rax+00]
HoloCure.exe.text+22310E0: 48 8B 05 71 8E 12 01     - mov rax,[gml_CScriptList]
HoloCure.exe.text+22310E7: 48 8B 0C 03              - mov rcx,[rbx+rax]
HoloCure.exe.text+22310EB: 48 85 C9                 - test rcx,rcx
HoloCure.exe.text+22310EE: 74 25                    - je HoloCure.exe.text+2231115
HoloCure.exe.text+22310F0: E8 5B FA FF FF           - call HoloCure.exe.text+2230B50
HoloCure.exe.text+22310F5: 48 8B 05 44 8E 12 01     - mov rax,[HoloCure.exe+335AF40]
HoloCure.exe.text+22310FC: 48 8B 0C 03              - mov rcx,[rbx+rax]
HoloCure.exe.text+2231100: 48 85 C9                 - test rcx,rcx
HoloCure.exe.text+2231103: 74 10                    - je HoloCure.exe.text+2231115
HoloCure.exe.text+2231105: E8 B6 DB F1 FF           - call HoloCure.exe.text+214ECC0
HoloCure.exe.text+223110A: 48 8B 05 2F 8E 12 01     - mov rax,[HoloCure.exe+335AF40]
HoloCure.exe.text+2231111: 48 89 34 03              - mov [rbx+rax],rsi
HoloCure.exe.text+2231115: 8B 05 2D 8E 12 01        - mov eax,[HoloCure.exe+335AF48]
HoloCure.exe.text+223111B: FF C7                    - inc edi
HoloCure.exe.text+223111D: 48 83 C3 08              - add rbx,08
}
{
// ORIGINAL CODE - INJECTION POINT: oc_ObjectArray

HoloCure.exe.text+220FEBB: 0F 1F 44 00 00                 - nop dword ptr [rax+rax+00]
HoloCure.exe.text+220FEC0: 66 41 0F 6E 44 14 08           - movd xmm0,[r12+rdx+08]
HoloCure.exe.text+220FEC7: 4C 8D 0D CA 75 69 00           - lea r9,[HoloCure.exe.rdata+DE498] (sequence event)
HoloCure.exe.text+220FECE: 49 8B 85 A0 00 00 00           - mov rax,[r13+000000A0]
HoloCure.exe.text+220FED5: 48 8D 15 CC 75 69 00           - lea rdx,[HoloCure.exe.rdata+DE4A8] (event_type)
HoloCure.exe.text+220FEDC: F3 0F E6 C0                    - cvtdq2pd xmm0,xmm0
HoloCure.exe.text+220FEE0: B9 03 00 00 00                 - mov ecx,00000003
HoloCure.exe.text+220FEE5: 49 8B 04 07                    - mov rax,[r15+rax]
HoloCure.exe.text+220FEE9: 48 89 44 24 48                 - mov [rsp+48],rax
HoloCure.exe.text+220FEEE: F2 0F 11 74 24 40              - movsd [rsp+40],xmm6
HoloCure.exe.text+220FEF4: 0F 28 D6                       - movaps xmm2,xmm6
HoloCure.exe.text+220FEF7: 48 89 5C 24 38                 - mov [rsp+38],rbx
HoloCure.exe.text+220FEFC: 66 49 0F 7E F0                 - movq r8,xmm6
HoloCure.exe.text+220FF01: 48 C7 44 24 30 00 00 00 00     - mov qword ptr [rsp+30],00000000
HoloCure.exe.text+220FF0A: F2 0F 11 44 24 28              - movsd [rsp+28],xmm0
HoloCure.exe.text+220FF10: 48 89 7C 24 20                 - mov [rsp+20],rdi
HoloCure.exe.text+220FF15: E8 B6 30 F4 FF                 - call HoloCure.exe.text+2152FD0
HoloCure.exe.text+220FF1A: 48 8B 15 7F 83 14 01           - mov rdx,[HoloCure.exe+33592A0]
HoloCure.exe.text+220FF21: 48 8D 0D F8 6B DB 00           - lea rcx,[HoloCure.exe.data+B20]
HoloCure.exe.text+220FF28: 41 B9 4C 00 00 00              - mov r9d,0000004C
HoloCure.exe.text+220FF2E: 89 05 58 B6 DB 00              - mov [HoloCure.exe.data+558C],eax
HoloCure.exe.text+220FF34: 45 8D 41 BB                    - lea r8d,[r9-45]
HoloCure.exe.text+220FF38: E8 23 F9 FF FF                 - call HoloCure.exe.text+220F860
HoloCure.exe.text+220FF3D: 48 8B 3D 94 1C F2 00           - mov rdi,[HoloCure.exe.data+16BBD8]
HoloCure.exe.text+220FF44: 33 F6                          - xor esi,esi
HoloCure.exe.text+220FF46: 48 63 2D 53 34 17 01           - movsxd  rbp,dword ptr [HoloCure.exe+33843A0]
HoloCure.exe.text+220FF4D: 48 8D 47 01                    - lea rax,[rdi+01]
HoloCure.exe.text+220FF51: 48 89 05 80 1C F2 00           - mov [HoloCure.exe.data+16BBD8],rax
HoloCure.exe.text+220FF58: 48 85 ED                       - test rbp,rbp
HoloCure.exe.text+220FF5B: 0F 8E AF 00 00 00              - jng HoloCure.exe.text+2210010
// ---------- INJECTING HERE ----------
oc_ObjectArray: 4C 8B 0D 38 52 F3 00           - mov r9,[gml_ObjectArray]
// ---------- DONE INJECTING  ----------
HoloCure.exe.text+220FF68: 0F 1F 84 00 00 00 00 00        - nop dword ptr [rax+rax+00000000]
HoloCure.exe.text+220FF70: 48 8B 05 C1 9B 16 01           - mov rax,[HoloCure.exe+337AB38]
HoloCure.exe.text+220FF77: 49 63 49 08                    - movsxd  rcx,dword ptr [r9+08]
HoloCure.exe.text+220FF7B: 4C 63 04 B0                    - movsxd  r8,dword ptr [rax+rsi*4]
HoloCure.exe.text+220FF7F: 49 8B 01                       - mov rax,[r9]
HoloCure.exe.text+220FF82: 49 23 C8                       - and rcx,r8
HoloCure.exe.text+220FF85: 48 03 C9                       - add rcx,rcx
HoloCure.exe.text+220FF88: 48 8B 14 C8                    - mov rdx,[rax+rcx*8]
HoloCure.exe.text+220FF8C: 48 85 D2                       - test rdx,rdx
HoloCure.exe.text+220FF8F: 74 73                          - je HoloCure.exe.text+2210004
HoloCure.exe.text+220FF91: 44 39 42 10                    - cmp [rdx+10],r8d
HoloCure.exe.text+220FF95: 74 1F                          - je HoloCure.exe.text+220FFB6
HoloCure.exe.text+220FF97: 48 8B 52 08                    - mov rdx,[rdx+08]
HoloCure.exe.text+220FF9B: 48 85 D2                       - test rdx,rdx
HoloCure.exe.text+220FF9E: 75 F1                          - jne HoloCure.exe.text+220FF91
HoloCure.exe.text+220FFA0: EB 62                          - jmp HoloCure.exe.text+2210004
HoloCure.exe.text+220FFA2: 8B 84 24 A8 00 00 00           - mov eax,[rsp+000000A8]
HoloCure.exe.text+220FFA9: 48 8B 94 24 B0 00 00 00        - mov rdx,[rsp+000000B0]
HoloCure.exe.text+220FFB1: E9 EF FE FF FF                 - jmp HoloCure.exe.text+220FEA5
HoloCure.exe.text+220FFB6: 48 8B 5A 18                    - mov rbx,[rdx+18]
HoloCure.exe.text+220FFBA: 48 85 DB                       - test rbx,rbx
HoloCure.exe.text+220FFBD: 74 45                          - je HoloCure.exe.text+2210004
HoloCure.exe.text+220FFBF: 48 8B 5B 50                    - mov rbx,[rbx+50]
HoloCure.exe.text+220FFC3: 48 85 DB                       - test rbx,rbx
HoloCure.exe.text+220FFC6: 74 35                          - je HoloCure.exe.text+220FFFD
HoloCure.exe.text+220FFC8: 48 8B 4B 10                    - mov rcx,[rbx+10]
HoloCure.exe.text+220FFCC: 48 85 C9                       - test rcx,rcx
HoloCure.exe.text+220FFCF: 74 2C                          - je HoloCure.exe.text+220FFFD
HoloCure.exe.text+220FFD1: F7 81 B0 00 00 00 03 00 10 00  - test [rcx+000000B0],00100003
HoloCure.exe.text+220FFDB: 48 8B 1B                       - mov rbx,[rbx]
}
{
// ORIGINAL CODE - INJECTION POINT: oc_GlobalVariables

HoloCure.exe.text+21687C4: 0F 29 74 24 60           - movaps [rsp+60],xmm6
HoloCure.exe.text+21687C9: 48 8B 05 A8 70 EC 00     - mov rax,[HoloCure.exe.data+69878]
HoloCure.exe.text+21687D0: 48 33 C4                 - xor rax,rsp
HoloCure.exe.text+21687D3: 48 89 44 24 50           - mov [rsp+50],rax
HoloCure.exe.text+21687D8: 8B DA                    - mov ebx,edx
HoloCure.exe.text+21687DA: 89 54 24 34              - mov [rsp+34],edx
HoloCure.exe.text+21687DE: 4C 8B F1                 - mov r14,rcx
HoloCure.exe.text+21687E1: 48 89 4C 24 38           - mov [rsp+38],rcx
HoloCure.exe.text+21687E6: 48 8B 0D C3 2D E6 00     - mov rcx,[HoloCure.exe.data+55B0]
HoloCure.exe.text+21687ED: 48 8B 01                 - mov rax,[rcx]
HoloCure.exe.text+21687F0: 44 8B CA                 - mov r9d,edx
HoloCure.exe.text+21687F3: 4D 8B C6                 - mov r8,r14
HoloCure.exe.text+21687F6: 48 8D 15 6B E3 6B 00     - lea rdx,[HoloCure.exe.rdata+5DB68] (initialise everything! %p, %u)
HoloCure.exe.text+21687FD: FF 50 10                 - call qword ptr [rax+10]
HoloCure.exe.text+2168800: E8 4B 7A 07 00           - call HoloCure.exe.text+21E0250
HoloCure.exe.text+2168805: E8 D6 C5 0E 00           - call HoloCure.exe.text+2254DE0
HoloCure.exe.text+216880A: E8 31 1F 05 00           - call HoloCure.exe.text+21BA740
HoloCure.exe.text+216880F: E8 7C 88 0C 00           - call HoloCure.exe.text+2231090
HoloCure.exe.text+2168814: E8 97 C0 0F 00           - call HoloCure.exe.text+22648B0
HoloCure.exe.text+2168819: E8 82 3F 0B 00           - call HoloCure.exe.text+221C7A0
HoloCure.exe.text+216881E: E8 5D BA 04 00           - call HoloCure.exe.text+21B4280
HoloCure.exe.text+2168823: E8 E8 52 10 00           - call HoloCure.exe.text+226DB10
HoloCure.exe.text+2168828: E8 D3 57 10 00           - call HoloCure.exe.text+226E000
HoloCure.exe.text+216882D: 80 3D 0C FB 1E 01 00     - cmp byte ptr [HoloCure.exe+3359340],00
HoloCure.exe.text+2168834: 74 11                    - je HoloCure.exe.text+2168847
HoloCure.exe.text+2168836: 48 8D 0D EB 17 1F 01     - lea rcx,[HoloCure.exe+335B028]
HoloCure.exe.text+216883D: E8 3E EC 0D 00           - call HoloCure.exe.text+2247480
HoloCure.exe.text+2168842: E8 E9 F5 11 00           - call HoloCure.exe.text+2287E30
HoloCure.exe.text+2168847: 48 8B 15 E2 3C FD 00     - mov rdx,[HoloCure.exe+313D530]
HoloCure.exe.text+216884E: 8B 0D D4 3C FD 00        - mov ecx,[HoloCure.exe+313D528]
// ---------- INJECTING HERE ----------
oc_GlobalVariables: 48 83 3D BC 3C FD 00 00  - cmp qword ptr [gml_GlobalVariables],00
// ---------- DONE INJECTING  ----------
HoloCure.exe.text+216885C: 75 17                    - jne HoloCure.exe.text+2168875
HoloCure.exe.text+216885E: 48 85 D2                 - test rdx,rdx
HoloCure.exe.text+2168861: 0F 84 6C 01 00 00        - je HoloCure.exe.text+21689D3
HoloCure.exe.text+2168867: 8B 42 0C                 - mov eax,[rdx+0C]
HoloCure.exe.text+216886A: 85 C0                    - test eax,eax
HoloCure.exe.text+216886C: 0F 4F C8                 - cmovg ecx,eax
HoloCure.exe.text+216886F: 89 0D B3 3C FD 00        - mov [HoloCure.exe+313D528],ecx
HoloCure.exe.text+2168875: 48 85 D2                 - test rdx,rdx
HoloCure.exe.text+2168878: 0F 84 55 01 00 00        - je HoloCure.exe.text+21689D3
HoloCure.exe.text+216887E: 8B 42 10                 - mov eax,[rdx+10]
HoloCure.exe.text+2168881: 8B 15 A5 3C FD 00        - mov edx,[HoloCure.exe+313D52C]
HoloCure.exe.text+2168887: 85 C0                    - test eax,eax
HoloCure.exe.text+2168889: 0F 4F D0                 - cmovg edx,eax
HoloCure.exe.text+216888C: 89 15 9A 3C FD 00        - mov [HoloCure.exe+313D52C],edx
HoloCure.exe.text+2168892: 45 33 C0                 - xor r8d,r8d
HoloCure.exe.text+2168895: E8 66 15 05 00           - call HoloCure.exe.text+21B9E00
HoloCure.exe.text+216889A: 48 8B 05 8F 3C FD 00     - mov rax,[HoloCure.exe+313D530]
HoloCure.exe.text+21688A1: 48 8B 78 18              - mov rdi,[rax+18]
HoloCure.exe.text+21688A5: 33 ED                    - xor ebp,ebp
HoloCure.exe.text+21688A7: 8B 0D 7B 3C FD 00        - mov ecx,[HoloCure.exe+313D528]
HoloCure.exe.text+21688AD: 85 C9                    - test ecx,ecx
HoloCure.exe.text+21688AF: 0F 8E 1E 01 00 00        - jng HoloCure.exe.text+21689D3
HoloCure.exe.text+21688B5: 48 8B 0F                 - mov rcx,[rdi]
HoloCure.exe.text+21688B8: 48 8B 09                 - mov rcx,[rcx]
HoloCure.exe.text+21688BB: E8 F0 E3 FD FF           - call HoloCure.exe.text+2146CB0
HoloCure.exe.text+21688C0: 48 8B F0                 - mov rsi,rax
HoloCure.exe.text+21688C3: BA 01 00 00 00           - mov edx,00000001
HoloCure.exe.text+21688C8: 44 8B C2                 - mov r8d,edx
HoloCure.exe.text+21688CB: 48 8B C8                 - mov rcx,rax
HoloCure.exe.text+21688CE: E8 9D 13 05 00           - call HoloCure.exe.text+21B9C70
}
{
// ORIGINAL CODE - INJECTION POINT: oc_StringsList

HoloCure.exe.text+27DA50: 4D 8B C2                 - mov r8,r10
HoloCure.exe.text+27DA53: 48 FF C2                 - inc rdx
HoloCure.exe.text+27DA56: 49 83 C2 18              - add r10,18
HoloCure.exe.text+27DA5A: 41 8B 40 10              - mov eax,[r8+10]
HoloCure.exe.text+27DA5E: 85 C0                    - test eax,eax
HoloCure.exe.text+27DA60: 74 09                    - je HoloCure.exe.text+27DA6B
HoloCure.exe.text+27DA62: 78 07                    - js HoloCure.exe.text+27DA6B
HoloCure.exe.text+27DA64: 41 3B C9                 - cmp ecx,r9d
HoloCure.exe.text+27DA67: 74 09                    - je HoloCure.exe.text+27DA72
HoloCure.exe.text+27DA69: FF C1                    - inc ecx
HoloCure.exe.text+27DA6B: 49 3B D3                 - cmp rdx,r11
HoloCure.exe.text+27DA6E: 7C E0                    - jl HoloCure.exe.text+27DA50
HoloCure.exe.text+27DA70: EB 09                    - jmp HoloCure.exe.text+27DA7B
HoloCure.exe.text+27DA72: 49 8B 40 08              - mov rax,[r8+08]
HoloCure.exe.text+27DA76: 41 39 38                 - cmp [r8],edi
HoloCure.exe.text+27DA79: 74 08                    - je HoloCure.exe.text+27DA83
HoloCure.exe.text+27DA7B: 41 83 E9 01              - sub r9d,01
HoloCure.exe.text+27DA7F: 79 A4                    - jns HoloCure.exe.text+27DA25
HoloCure.exe.text+27DA81: EB 03                    - jmp HoloCure.exe.text+27DA86
HoloCure.exe.text+27DA83: 48 8B F0                 - mov rsi,rax
HoloCure.exe.text+27DA86: 4C 8B 34 24              - mov r14,[rsp]
HoloCure.exe.text+27DA8A: 48 8B C6                 - mov rax,rsi
HoloCure.exe.text+27DA8D: 48 8B 74 24 20           - mov rsi,[rsp+20]
HoloCure.exe.text+27DA92: 48 8B 6C 24 18           - mov rbp,[rsp+18]
HoloCure.exe.text+27DA97: 48 8B 5C 24 10           - mov rbx,[rsp+10]
HoloCure.exe.text+27DA9C: 48 8B 7C 24 28           - mov rdi,[rsp+28]
HoloCure.exe.text+27DAA1: 48 83 C4 08              - add rsp,08
HoloCure.exe.text+27DAA5: C3                       - ret
HoloCure.exe.text+27DAA6: 3B 3D 94 4E 55 00        - cmp edi,[HoloCure.exe.data+68940]
HoloCure.exe.text+27DAAC: 7D 29                    - jnl HoloCure.exe.text+27DAD7
// ---------- INJECTING HERE ----------
oc_StringsList: 48 8B 05 9B 4E 55 00     - mov rax,[HoloCure.exe.data+68950]
// ---------- DONE INJECTING  ----------
HoloCure.exe.text+27DAB5: 48 8B 74 24 20           - mov rsi,[rsp+20]
HoloCure.exe.text+27DABA: 48 8B 7C 24 28           - mov rdi,[rsp+28]
HoloCure.exe.text+27DABF: 48 63 CA                 - movsxd  rcx,edx
HoloCure.exe.text+27DAC2: 48 8B 9C C8 00 CB F3 FF  - mov rbx,[rax+rcx*8-000C3500]
HoloCure.exe.text+27DACA: 48 8B C3                 - mov rax,rbx
HoloCure.exe.text+27DACD: 48 8B 5C 24 10           - mov rbx,[rsp+10]
HoloCure.exe.text+27DAD2: 48 83 C4 08              - add rsp,08
HoloCure.exe.text+27DAD6: C3                       - ret
HoloCure.exe.text+27DAD7: 48 8B 74 24 20           - mov rsi,[rsp+20]
HoloCure.exe.text+27DADC: 33 DB                    - xor ebx,ebx
HoloCure.exe.text+27DADE: 48 8B 7C 24 28           - mov rdi,[rsp+28]
HoloCure.exe.text+27DAE3: 8B C3                    - mov eax,ebx
HoloCure.exe.text+27DAE5: 48 8B 5C 24 10           - mov rbx,[rsp+10]
HoloCure.exe.text+27DAEA: 48 83 C4 08              - add rsp,08
HoloCure.exe.text+27DAEE: C3                       - ret
HoloCure.exe.text+27DAEF: 85 D2                    - test edx,edx
HoloCure.exe.text+27DAF1: 78 1F                    - js HoloCure.exe.text+27DB12
HoloCure.exe.text+27DAF3: 3B 15 E7 A9 55 00        - cmp edx,[1407D94E0]
HoloCure.exe.text+27DAF9: 7D 17                    - jnl HoloCure.exe.text+27DB12
HoloCure.exe.text+27DAFB: 48 63 C2                 - movsxd  rax,edx
HoloCure.exe.text+27DAFE: 48 8D 0D EB A9 55 00     - lea rcx,[1407D94F0]
HoloCure.exe.text+27DB05: 48 C1 E0 05              - shl rax,05
HoloCure.exe.text+27DB09: 48 8B 04 08              - mov rax,[rax+rcx]
HoloCure.exe.text+27DB0D: 48 83 C4 08              - add rsp,08
HoloCure.exe.text+27DB11: C3                       - ret
HoloCure.exe.text+27DB12: 48 8D 05 27 18 3F 00     - lea rax,[HoloCure.exe.rdata+C4340] (&lt;unknown built-in variable&gt;)
HoloCure.exe.text+27DB19: 48 83 C4 08              - add rsp,08
HoloCure.exe.text+27DB1D: C3                       - ret
HoloCure.exe.text+27DB1E: CC                       - int 3
HoloCure.exe.text+27DB1F: CC                       - int 3
}
--]]
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>11216</ID>
                      <Description>"Required.GM.getGlobalVariables"</Description>
                      <Color>D58F00</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end

local global = AddressList["Pointer-&gt;GlobalVariables"]

[ENABLE]

Recorder.addressUpdate(memrec, global, "gml_GlobalVariables", {0x00, 0x10, 0x48})

synchronize(function()
    local timer = createTimer(MainForm)
    local function update(timer)
        if not readInteger("$process") then memrec.active = false end
        if not memrec.active then return timer.destroy() end
        GM.collectGlobalVariables()
    end
    timer.onTimer, timer.interval = update, 500
end)

[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>11217</ID>
                      <Description>"Required.GM.getObjectVariables"</Description>
                      <Color>D58F00</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end

local mr = {
    AddressList["Pointer-&gt;PlayerManager"],
    AddressList["Pointer-&gt;FishingMiniGame"],
    AddressList["Pointer-&gt;FarmingSpot"]
}

[ENABLE]

local obj = {
    "obj_PlayerManager",
    "obj_FishingMiniGame",
    "obj_FarmingSpot"
}

for i = 1, #obj do
    local addr = ("GM.Object.Dict['%s'].Instance[1]+GM.Object.VarArray"):format(obj[i])
    Recorder.addressUpdate(memrec, mr[i], addr, {0x00, 0x10})
end

synchronize(function()
    local timer = createTimer(MainForm)
    local function update(timer)
        if not readInteger("$process") then memrec.active = false end
        if not memrec.active then return timer.destroy() end
        for i = 1, #obj do
            GM.collectObjectInstances(obj[i])
            if GM.Object.Dict[obj[i]].Instance[1] then GM.collectObjectVariables(obj[i]) end
        end
    end
    timer.onTimer, timer.interval = update, 500
end)

[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>11038</ID>
                      <Description>"Required.GM.createGlobalChildren"</Description>
                      <Color>D58F00</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end

local parent = AddressList["Pointer-&gt;GlobalVariables"]
local dl     = AddressList["Dropdown.GM.GlobalVariables"]

[ENABLE]

synchronize(function()
    local timer = createTimer(MainForm)
    local function update(timer)
        if not readInteger("$process") then memrec.active = false end
        if not memrec.active then return timer.destroy() end
        if not Recorder.getAddress(parent, true) then return end
        for i = 0, dl.DropdownList.count - 1 do
            local name = dl.DropDownDescription[i]
            local addr = ("+GM.Object.Dict['%s'].Variables['%s']"):format("Globals", name)
            local mr   = Recorder.createChild(parent, name, addr)
            mr.varType     = vtDouble
            mr.OffsetCount = 1
            mr.Offset[0]   = 0x00
        end
        timer.destroy()
    end
    timer.onTimer, timer.interval = update, 500
end)

[DISABLE]

synchronize(function()
    for i = parent.count - 1, 1, -1 do parent[i].destroy() end
end)
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>11219</ID>
                      <Description>"Required.GM.createPlayerChildren"</Description>
                      <Color>D58F00</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end

local parent = AddressList["Pointer-&gt;PlayerManager"]
local dl     = AddressList["Dropdown.GM.PlayerVariables"]

[ENABLE]

synchronize(function()
    local timer = createTimer(MainForm)
    local function update(timer)
        if not readInteger("$process") then memrec.active = false end
        if not memrec.active then return timer.destroy() end
        if not Recorder.getAddress(parent, true) then return end
        for i = 1, dl.DropdownList.count - 1 do
            local name = dl.DropDownDescription[i]
            local offs = "+GM.Object.Dict['%s'].Variables['%s']"
            local addr = (offs):format("obj_PlayerManager", name)
            local mr   = Recorder.createChild(parent, name, addr)
            mr.varType     = vtDouble
            mr.OffsetCount = 1
            mr.Offset[0]   = 0x00
        end
        timer.destroy()
    end
    timer.onTimer, timer.interval = update, 500
end)

[DISABLE]

synchronize(function()
    for i = parent.count - 1, 2, -1 do parent[i].destroy() end
end)
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>11712</ID>
                      <Description>"Required.GM.createFishChildren"</Description>
                      <Color>D58F00</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end

local parent = AddressList["Pointer-&gt;FishingMiniGame"]
local dl     = AddressList["Dropdown.GM.FishVariables"]

[ENABLE]

synchronize(function()
    local timer = createTimer(MainForm)
    local function update(timer)
        if not readInteger("$process") then memrec.active = false end
        if not memrec.active then return timer.destroy() end
        if not Recorder.getAddress(parent, true) then return end
        for i = 1, dl.DropdownList.count - 1 do
            local name = dl.DropDownDescription[i]
            local offs = "+GM.Object.Dict['%s'].Variables['%s']"
            local addr = (offs):format("obj_FishingMiniGame", name)
            local mr   = Recorder.createChild(parent, name, addr)
            mr.varType     = vtDouble
            mr.OffsetCount = 1
            mr.Offset[0]   = 0x00
        end
        timer.destroy()
    end
    timer.onTimer, timer.interval = update, 500
end)

[DISABLE]

synchronize(function() Recorder.removeChildren(parent) end)
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>11758</ID>
                      <Description>"Required.GM.createFarmChildren"</Description>
                      <Color>D58F00</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end

local parent = AddressList["Pointer-&gt;FarmingSpot"]
local dl     = AddressList["Dropdown.GM.FarmVariables"]

[ENABLE]

synchronize(function()
    local timer = createTimer(MainForm)
    local function update(timer)
        if not readInteger("$process") then memrec.active = false end
        if not memrec.active then return timer.destroy() end
        if not Recorder.getAddress(parent, true) then return end
        for i = 1, dl.DropdownList.count - 1 do
            local name = dl.DropDownDescription[i]
            local offs = "+GM.Object.Dict['%s'].Variables['%s']"
            local addr = (offs):format("obj_FarmingSpot", name)
            local mr   = Recorder.createChild(parent, name, addr)
            mr.varType     = vtDouble
            mr.OffsetCount = 1
            mr.Offset[0]   = 0x00
        end
        timer.destroy()
    end
    timer.onTimer, timer.interval = update, 500
end)

[DISABLE]

synchronize(function() Recorder.removeChildren(parent) end)
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>12612</ID>
                      <Description>"Required.GM.getStatUpsOffsets"</Description>
                      <Color>D58F00</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end

local parent = AddressList["P-&gt;playerStatUps"]

[ENABLE]

synchronize(function()
    local timer = createTimer(MainForm)
    local function update(timer)
        if not readInteger("$process") then memrec.active = false end
        if not memrec.active then return timer.destroy() end
        local base = Recorder.getAddress(parent, true)
        if not base then return end
        local tbl = {}
        for i = 0, 99 do
            local ptr = readQword(base + i * 0x10)
            if not (ptr == 0) then tbl[#tbl + 1] = ("+%02X"):format(i * 0x10) end
        end
        for i = 0, parent.count - 1 do
            parent[i].address = tbl[i + 1]
            parent[i].OffsetCount = 1
            parent[i].Offset[0] = 0
        end
        timer.destroy()
    end
    timer.onTimer, timer.interval = update, 500
end)

[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>11037</ID>
                      <Description>"Dropdown.GM.GlobalVariables"</Description>
                      <DropDownList DisplayValueAsItem="1">0:PLAYERLEVEL
1:showHUDHP
2:showHPVal
3:aboveHP
4:maxHP
5:currentHP
6:experience
7:rainbowEXPDrop
8:goldAnvilCanDrop
9:moneyDropChanceBuff
10:fruitFoodBuff
11:anvilDropChanceBuff
12:enhancementBuff
13:moneyMultiplier
14:enhanceCostMultiplier
15:freeAnvil
16:stageCoinBonus
17:currentRunMoneyGained
18:moneyHeal
19:coinAutoPick
20:basedamage
21:damage
22:enemyDefeated
23:burgersEaten
24:showDamageText
25:reducedSpawn
26:gamepadSpeedMultiplier
27:rerollTimes
28:eliminateTimes
29:StatusEffects
30:goldenHammer
31:goldenHammerPieces
32:haluLevel
33:haluBuff
34:preHaluDefeated
35:timeModeRateScale
36:timeModeSpawnScale
37:timePause
38:timesDodged
39:fullscreen
40:screen_resolution_x
41:screen_resolution_y
42:width_gui
43:timeModeRateScale
44:bgmPlay
</DropDownList>
                      <Color>808080</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>11218</ID>
                      <Description>"Dropdown.GM.PlayerVariables"</Description>
                      <DropDownList DisplayValueAsItem="1">0:charName
1:canControl
2:boxCoinGain
3:gotGoldenAnvil
4:enhanceDone
5:gameWon
6:hardcoreGamerFlag
7:lvlrate1
8:charPortrait
9:playerDamageTaken
10:boxCoinRate
11:winBonus
12:charWeapon
13:lvlexponent
14:charSpecial
15:specialCD
16:PERKS
17:gotAnvil
18:perksMenu
19:collabing
20:currentBoxItem
21:collabsMenu
22:haluBonusCoins
23:dontNeedFlag
24:eliminatedThisLevel
25:itemLimit
26:gameOvered
27:stickerActionSelected
28:ITEMS
29:eliminateMode
30:paused
31:reviving
32:holdLevel
33:superLit
34:darkening
35:goldenOptionSelected
36:hurtTime
37:collabsStartingIndex
38:collabCount
39:anvilID
40:stickerID
41:couchPotatoFlag
42:leveled
43:upgradeActionSelected
44:paused_screen_sprite
45:STICKERS
46:levelOptionSelect
47:stickerLineTime
48:itemBoxTakeOption
49:boxCoinTime
50:stickerAction
51:boxBounceTime
52:pauseOption
53:usedSticker
54:gotSticker
55:dankTime
56:controlsFree
57:numberOfMaxedWeapons
58:boxOpenned
59:boxItemAmount
60:numberOfOwnedItems
61:trueRNGcounter
62:boxOpenTime
63:enhancingTime
64:weaponLimit
65:collabDone
66:gotBox
67:canSpecial
68:collabingTime
69:goldenAnvilOptionSelected2
70:stickerPauseMenu
71:specialColorTime
72:enhanceResult
73:gameDone
74:specialIconPulseTime
</DropDownList>
                      <Color>808080</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>11711</ID>
                      <Description>"Dropdown.GM.FishVariables"</Description>
                      <DropDownList DisplayValueAsItem="1">0:animPlayingSpeed
1:barFlashTime
2:barHold
3:bonusFish
4:bonusYield
5:bpm
6:canControl
7:canPress
8:catchNumber
9:comboChain
10:currentDifficulty
11:difficultyUp
12:failAmount
13:failTimer
14:fireworksCD
15:fishDepleteRate
16:fishFound
17:fishGauge
18:fishingBegin
19:fishingFurniture
20:fishingMode
21:fishingTimer
22:fishSize
23:foundGold
24:goldBonus
25:letterBox
26:lightTime
27:minFish
28:queueTime
29:selectedFurniture
30:successAmount
31:waitTime
</DropDownList>
                      <Color>808080</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>11756</ID>
                      <Description>"Dropdown.GM.FarmVariables"</Description>
                      <DropDownList DisplayValueAsItem="1">0:addDuration
1:attackCount
2:canControl
3:crit
4:cropsResults
5:cropsResultsTimer
6:currentMenu
7:currentPlant
8:cursorTime
9:DB
10:DR
11:emitter
12:farmConfirmSelect
13:farmID
14:glowTime
15:grown
16:growthState
17:growTime
18:highlighted
19:hitLimit
20:HPregen
21:interactable
22:interacting
23:inventorySelect1
24:inventorySelect2
25:lifetime
26:lightTime
27:pauseOption
28:pickupRange
29:removeConfirm
30:spriteHeight
31:spriteWidth
32:startingPosition
33:startingPosition2
34:transparent
35:uni_add
36:waitTime
37:waterCD
38:yieldNumber
</DropDownList>
                      <Color>808080</Color>
                      <GroupHeader>1</GroupHeader>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>16</ID>
                  <Description>"Dropdown.Boolean"</Description>
                  <DropDownList DisplayValueAsItem="1">0:False
1:True
</DropDownList>
                  <Color>808080</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>17</ID>
                  <Description>"Reserved.enableDebugMode"</Description>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

[ENABLE]

AddressList.getMemoryRecordByID(777).active, _G['isDebug'] = true, true

return 'nop'

[DISABLE]
</AssemblerScript>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Toggle Activation</Action>
                      <Keys>
                        <Key>18</Key>
                        <Key>88</Key>
                      </Keys>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>18</ID>
                  <Description>"Reserved.outputOptionsForBBcode"</Description>
                  <Color>D58F00</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end

local function outputOptionsForBBcode(mr)
    for i = 0, mr.count - 1 do
        local base = mr[i].description
        local isAA = (mr[i].type == vtAutoAssembler) and '[color=Dodgerblue]'..base..'[/color]'
        local isAG = mr[i].isAddressGroupHeader and '[color=Olive]'..base..'[/color]'
        local isGH = mr[i].isGroupHeader and '[color=Gray]'..base..'[/color]'
        local info = isAA or isAG or isGH or base
    	if (mr[i].count == 0) then print('[*]'..info); goto continue end
        print('[*]'..info)
        print('[list]'); outputOptionsForBBcode(mr[i]); print('[/list]')
        ::continue::
    end
end

[ENABLE]

local main = AddressList[0]

print([==[[color=Gray]&lt;colors&gt;[/color]
[list]
[*][color=Dodgerblue]Script[/color] or [color=Gray]Script that's no available for AOB Error[/color]
[*][color=Olive]AddressGroupHeader[/color]
[*][color=Gray]GroupHeader/Comment[/color]
[*]Variable
[/list]]==])

for i = 0, main.count - 2 do
    print('[color=Gray]'..main[i].description..'[/color]')
    print('[list]'); outputOptionsForBBcode(main[i]); print('[/list]')
end

print(''); return 'nop'

[DISABLE]
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>12852</ID>
          <Description>"write_report"</Description>
          <Color>CE9F00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
[ENABLE]
-- Get the Process ID
local pid = getOpenedProcessID()

-- Create a filename incorporating the PID
local filename = "C:/ai_knight/cheat_engine_report_" .. tostring(pid) .. ".txt"

-- Opens or creates the file with the dynamic name in write mode
local file = io.open(filename, "w")

if file then
    -- Iterate through all records in the cheat table
    for i=1, getAddressList().Count do
        local record = getAddressList().getMemoryRecord(i-1) -- Zero-based index in Lua

        -- Check if the record is a cheat entry (not a group or other non-cheat entry)
        if record.Type ~= vtGroupHeader and record.Type ~= vtAutoAssembler then
            record.Active = true -- Enable the cheat entry

            -- Write the cheat entry's name and address to the file
            file:write(string.format("Name: %s, Address: %s\n", record.Description, record.AddressString))
        end
    end

    file:close() -- Close the file when done
    print("File written:", filename)
else
    print("Failed to open file for writing.")
end
 
 
[DISABLE]
--code from here till the end of the code will be used to disable the cheat
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>80</Key>
              </Keys>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <LuaScript>
    <LuaScriptEntry Name="Auto Attach Process">_G["isDebug"] = not (messageDialog("Auto-attach to process?", 3, 0, 1) == mrYes)
local id = getWindowProcessID(findWindow(Utf8ToAnsi("YYGameMakerYY")))
if not isDebug then openProcess(id) end
if isDebug then MainForm.sbOpenProcess.doClick() end
</LuaScriptEntry>
    <LuaScriptEntry Name="Activate Table Settings">AddressList.getMemoryRecordByID(777).active = getAddressSafe("$process")
</LuaScriptEntry>
    <LuaScriptEntry Name=" Script  4 ">-- Get the Process ID
local pid = getOpenedProcessID()

-- Create a filename incorporating the PID
local filename = "C:/ai_knight/cheat_engine_report_" .. tostring(pid)

-- Opens or creates the file with the dynamic name in write mode
local file = io.open(filename, "w")

if file then
    -- Iterate through all records in the cheat table
    for i=1, getAddressList().Count do
        local record = getAddressList().getMemoryRecord(i-1) -- Zero-based index in Lua

        -- Check if the record is a cheat entry (not a group or other non-cheat entry)
        if record.Type ~= vtGroupHeader and record.Type ~= vtAutoAssembler then
            record.Active = true -- Enable the cheat entry

            -- Write the cheat entry's name and address to the file
            file:write(string.format("Name: %s, Address: %s\n", record.Description, record.AddressString))
        end
    end

    file:close() -- Close the file when done
    print("File written:", filename)
else
    print("Failed to open file for writing.")
end

</LuaScriptEntry>
  </LuaScript>
</CheatTable>
